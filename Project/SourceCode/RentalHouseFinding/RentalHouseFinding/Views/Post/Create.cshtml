@model RentalHouseFinding.Models.PostViewModel
@{
    ViewBag.Title = "Index";
    Uri auxBaseUri = new Uri(Request.Url.GetLeftPart(UriPartial.Authority));
    Uri baseUri = new Uri(auxBaseUri, Url.Content("~"));  
}@*
<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>*@
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link rel="StyleSheet" href="@Url.Content("~/Content/ui-lightness/jquery-ui-1.8.6.custom.css")" type="text/css" media="all"/>
<link rel="StyleSheet" href="@Url.Content("~/Content/jquery.tagedit.css")" type="text/css" media="all"/>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.8.6.custom.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.autoGrowInput.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.tagedit.js")"></script>
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".wizard-step:first").fadeIn(); // show first step


        // attach backStep button handler
        // hide on first step
        $("#back-step").hide().click(function () {
            var $step = $(".wizard-step:visible"); // get current step
            if ($step.prev().hasClass("wizard-step")) { // is there any previous step?
                $step.hide().prev().fadeIn();  // show it and hide current step

                // disable backstep button?
                if (!$step.prev().prev().hasClass("wizard-step")) {
                    $("#back-step").hide();
                }
            }
        });


        // attach nextStep button handler       
        $("#next-step").click(function () {

            var $step = $(".wizard-step:visible"); // get current step

            var validator = $("form").validate(); // obtain validator
            var anyError = false;
            $step.find("input").each(function () {
                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }

            });

            if (anyError)
                return false; // exit if any error found




            if ($step.next().hasClass("confirm")) { // is it confirmation?
                // show confirmation asynchronously
                $.post("/post/confirm", $("form").serialize(), function (r) {
                    // inject response in confirmation step
                    $(".wizard-step.confirm").html(r);
                });

            }

            if ($step.next().hasClass("wizard-step")) { // is there any next step?
                $step.hide().next().fadeIn();  // show it and hide current step
                $("#back-step").show();   // recall to show backStep button
            }

            else { // this is last step, submit form
                $("form").submit();
            }


        });
        //--------------------
        var marker;
        var map;
        var mapProp = {
            center: new google.maps.LatLng(21.04349121680354, 105.523681640625),
            zoom: 8,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("mapContainer"), mapProp);
        google.maps.event.addListener(map, 'click', function (event) {
            if (marker == null) {
                marker = new google.maps.Marker({
                    position: event.latLng,
                    map: map,
                    draggable: true
                });
            } else {
                marker.setPosition(event.latLng);
            }
            $('#Lat').val(event.latLng.lat());
            $('#Lon').val(event.latLng.lng());
        });

        
        //For tag input
        var source;
        $.getJSON("@baseUri.ToString()" + "service/GetLocation", 
            function (myData) {
                source = myData;
            });
        $('input.tag').tagedit({
            autocompleteOptions: {
                source: function (request, response) {
                    var data = [];
                    $.each(source, function (index, itemData) {
                        if (itemData.Text.length != 0) {
                            data.push({ "id": itemData.Value, "label": itemData.Text, "value": itemData.Text });
                        }
                    });
                    return response($.ui.autocomplete.filter(data, request.term));
                }
            },
            allowEdit: false,
            allowDelete: false
        });

        //For page postback
        var idPro = $("#ProvinceId option:selected").val();
        var select = $("#DistrictId");
        select.empty();
        select.append($('<option/>', {
            value: '',
            text: '-- Chọn Quận/Huyện --'
        }));
        if (idPro != 0) {
            $.getJSON("@baseUri.ToString()" + "service/GetDistrictList", { id: idPro },
            function (myData) {
                $.each(myData, function (index, itemData) {
                    if (itemData.Text.length != 0) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    }
                });
            });
        };

        $("#ProvinceId").change(function () {
            var idPro = $("#ProvinceId option:selected").val();
            var select = $("#DistrictId");
            select.empty();
            select.append($('<option/>', {
                value: '',
                text: '-- Chọn Quận/Huyện --'
            }));
            $.getJSON("@baseUri.ToString()" + "service/GetDistrictList", { id: idPro },
                function (myData) {
                    $.each(myData, function (index, itemData) {
                        if (itemData.Text.lenght != 0) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        }
                    });
                });
                $.getJSON("@baseUri.ToString()" + "service/GetLatLon", { id: idPro, type: "province" },
                function (myData) {
                    $.each(myData, function (index, itemData) {
                        var provinceLatLon = new google.maps.LatLng(itemData.Value.split(';')[0], itemData.Value.split(';')[1]);
                        map.setOptions({
                            center: provinceLatLon,
                            zoom: 11
                        });
                    });
                });
        });
        $("#DistrictId").change(function () {
            var idDis = $("#DistrictId  option:selected").val();
            $.getJSON("@baseUri.ToString()" + "service/GetLatLon", { id: idDis, type: "district" },
            function (myData) {
                $.each(myData, function (index, itemData) {
                    var districtLatLon = new google.maps.LatLng(itemData.Value.split(';')[0], itemData.Value.split(';')[1]);
                    map.setOptions({
                        center: districtLatLon,
                        zoom: 14
                    });
                });
            });
        });

        $("#Street").change(function () {
            //var NumberHouse = $('#NumberHouse').val();
            var Street = $(this).val();
            var District = $("#DistrictId option:selected").text();
            var Province = $("#ProvinceId option:selected").text();
            var geocoder = new google.maps.Geocoder();
            var address = Street + ' ' + District + ' ' + Province;

            if (geocoder) {
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setOptions({
                            center: results[0].geometry.location,
                            zoom: 16
                        });
                        if (marker == null) {
                            marker = new google.maps.Marker({
                                position: results[0].geometry.location,
                                map: map,
                                draggable: true
                            });
                        }
                        else {
                            marker.setPosition(results[0].geometry.location);
                        }
                    }
                    else {
                        alert("Lỗi kết nối đến máy chủ google: " + status);
                    }
                });
            }
        });
        
    });
</script>
<script type = "text/javascript">
    var cellTemplates = new Array();
    cellTemplates[0] = '<fieldset id="field{counter}"><label>Chọn ảnh: </label>';
    cellTemplates[1] = '<input id="image{counter}" name="images" type="file" />';
    cellTemplates[2] = '<a href="#" id="lnkRemoveFile{counter}" onclick="return removeFile(this);">Xóa</a></fieldset>';
    var counter = 0;

    //adds a file input row
    function addFile(description) {
        //increment counter
        counter++;
        var html = "";
        for (var i = 0; i < cellTemplates.length; i++) {

            //format the cell template text
            html += cellTemplates[i].replace(/\{counter\}/g, counter).replace(/\{value\}/g,
                    (description == null) ? '' : description);
        }
        $("#uploadFile").append(html);
    }
    //removes a file input row
    function removeFile(obj) {
        $('html, body').animate({
            scrollTop: $("#uploadFile").offset().top
        }, 500);
        $(obj).parent().remove();
    }
   </script>

<script type="text/javascript">
    $(document).ready(function () {
        

    });

</script>

<style type="text/css">
    .wizard-step
    {
	    display: none;
    }

    .display-field
    {
	    font-weight: bold;
    }
</style>
   
<div id= "create-post-page">
@Html.ValidationSummary(true, "Vui lòng kiểm tra lại thông tin như thông báo bên dưới!", new { style = "color:red" })
@using (Html.BeginForm("create", "post", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
        <div class = "content" style="float:left;" >
            <div class="wizard-step">
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.CategoryId)
            </div>
            <div class="editor-field">
                @Html.DropDownList("CategoryId", null, new { @class = "select" })
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ProvinceId)
            </div>
            <div class="editor-field">
                @Html.DropDownList("ProvinceId", (IEnumerable<SelectListItem>)ViewBag.ProvinceId, new { @class = "select" })
                @Html.ValidationMessageFor(model => model.ProvinceId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DistrictId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.DistrictId,
                        new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "-- Chọn Quận/Huyện --",
                        new { id = "DistrictId", @class = "select" })
                @Html.ValidationMessageFor(model => model.DistrictId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.NumberHouse)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NumberHouse)
                @Html.ValidationMessageFor(model => model.NumberHouse)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Street)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Price)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Area)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Area)
                @Html.ValidationMessageFor(model => model.Area)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Direction)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Direction)
                @Html.ValidationMessageFor(model => model.Direction)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.NameContact)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NameContact)
                @Html.ValidationMessageFor(model => model.NameContact)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PhoneContact)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PhoneContact)
                @Html.ValidationMessageFor(model => model.PhoneContact)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Yahoo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Yahoo)
                @Html.ValidationMessageFor(model => model.Yahoo)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Skype)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Skype)
                @Html.ValidationMessageFor(model => model.Skype)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class = "map fl_r">
                <div id="mapContainer" style="width:500px;height:380px;"></div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Lat)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Lon)
                </div>
            </div>
           <div id="uploadFile">
                <fieldset>
                <label>Chọn ảnh: </label>
                <input id="file0" name="images" type="file" />
                <a href="javascript:;" onclick="return addFile();" >Thêm ảnh</a>
                </fieldset>
            </div>
        </div>
        <div class="wizard-step" >
            <h3>
                Step 2: First name and last name.</h3>
            <table>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasInternet)</td>
                    <td>@Html.LabelFor(model => model.HasInternet)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasWaterHeater)</td>
                    <td>@Html.LabelFor(model => model.HasWaterHeater)</td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.ElectricityFee)</td>
                    <td>@Html.EditorFor(model => model.ElectricityFee)
                        @Html.ValidationMessageFor(model => model.ElectricityFee)
                    </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.WaterFee)</td>
                    <td>@Html.EditorFor(model => model.WaterFee)
                        @Html.ValidationMessageFor(model => model.WaterFee)
                    </td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasTVCable)</td>
                    <td>@Html.LabelFor(model => model.HasTVCable)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasBed)</td>
                    <td>@Html.LabelFor(model => model.HasBed)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.IsAllowCooking)</td>
                    <td>@Html.LabelFor(model => model.IsAllowCooking)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasMotorParking)</td>
                    <td>@Html.LabelFor(model => model.HasMotorParking)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasToilet)</td>
                    <td>@Html.LabelFor(model => model.HasToilet)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasAirConditioner)</td>
                    <td>@Html.LabelFor(model => model.HasAirConditioner)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasGarage)</td>
                    <td>@Html.LabelFor(model => model.HasGarage)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.IsStayWithOwner)</td>
                    <td>@Html.LabelFor(model => model.IsStayWithOwner)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasSecurity)</td>
                    <td>@Html.LabelFor(model => model.HasSecurity)</td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.RestrictHours)</td>
                    <td>@Html.EditorFor(model => model.RestrictHours)
                        @Html.ValidationMessageFor(model => model.RestrictHours)
                    </td>
                </tr>
                <tr>
                    <td align="left">@Html.Label("Địa điểm lân cận:")</td>
                    <td><input type="text" name="tag[]" value="" class="tag"/>
                   </td>
                </tr>
            </table>
        </div>
        <div class="wizard-step" >
            <h3>
                Step 3: Age and biography.</h3>
            <table>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.PhoneActive)</td>
                    <td>@Html.EditorFor(model => model.PhoneActive)
                        @Html.ValidationMessageFor(model => model.PhoneActive)
                    </td>
                </tr>
            </table>
        </div>
        <div class="wizard-step confirm">
        
        </div>
       
       
        <p>
            <input type="button" id="back-step" name="back-step" value="< Back" />
            <input type="button" id="next-step" name="next-step" value="Next >" />            
        </p>
            @*<table>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Title)</td>
                    <td>@Html.EditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.PhoneActive)</td>
                    <td>@Html.EditorFor(model => model.PhoneActive)
                        @Html.ValidationMessageFor(model => model.PhoneActive)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.CategoryId)</td>
                    <td>@Html.DropDownList("CategoryId", null, new { @class = "select" })
                         @Html.ValidationMessageFor(model => model.CategoryId)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.ProvinceId)</td>
                    <td>@Html.DropDownList("ProvinceId", (IEnumerable<SelectListItem>)ViewBag.ProvinceId, new { @class = "select" })
                        @Html.ValidationMessageFor(model => model.ProvinceId)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.DistrictId)</td>
                    <td>@Html.DropDownListFor(model => model.DistrictId,
                        new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "-- Chọn Quận/Huyện --",
                        new { id = "DistrictId", @class = "select" })
                        @Html.ValidationMessageFor(model => model.DistrictId)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.NumberHouse)</td>
                    <td>@Html.EditorFor(model => model.NumberHouse)
                        @Html.ValidationMessageFor(model => model.NumberHouse)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Street)</td>
                    <td>@Html.EditorFor(model => model.Street)
                        @Html.ValidationMessageFor(model => model.Street)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Price) đồng</td>
                    <td>@Html.EditorFor(model => model.Price)
                        @Html.ValidationMessageFor(model => model.Price)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Area) m2</td>
                    <td>@Html.EditorFor(model => model.Area)
                        @Html.ValidationMessageFor(model => model.Area)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Description)</td>
                    <td>@Html.TextAreaFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                   </td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasInternet)</td>
                    <td>@Html.LabelFor(model => model.HasInternet)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasWaterHeater)</td>
                    <td>@Html.LabelFor(model => model.HasWaterHeater)</td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.ElectricityFee)</td>
                    <td>@Html.EditorFor(model => model.ElectricityFee)
                        @Html.ValidationMessageFor(model => model.ElectricityFee)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.WaterFee)</td>
                    <td>@Html.EditorFor(model => model.WaterFee)
                        @Html.ValidationMessageFor(model => model.WaterFee)
                   </td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasTVCable)</td>
                    <td>@Html.LabelFor(model => model.HasTVCable)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasBed)</td>
                    <td>@Html.LabelFor(model => model.HasBed)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.IsAllowCooking)</td>
                    <td>@Html.LabelFor(model => model.IsAllowCooking)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasMotorParking)</td>
                    <td>@Html.LabelFor(model => model.HasMotorParking)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasToilet)</td>
                    <td>@Html.LabelFor(model => model.HasToilet)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasAirConditioner)</td>
                    <td>@Html.LabelFor(model => model.HasAirConditioner)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasGarage)</td>
                    <td>@Html.LabelFor(model => model.HasGarage)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.IsStayWithOwner)</td>
                    <td>@Html.LabelFor(model => model.IsStayWithOwner)</td>
                </tr>
                <tr>
                    <td align="right">@Html.EditorFor(model => model.HasSecurity)</td>
                    <td>@Html.LabelFor(model => model.HasSecurity)</td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.RestrictHours)</td>
                    <td>@Html.EditorFor(model => model.RestrictHours)
                        @Html.ValidationMessageFor(model => model.RestrictHours)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Direction)</td>
                    <td>@Html.EditorFor(model => model.Direction)
                        @Html.ValidationMessageFor(model => model.Direction)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.PhoneContact)</td>
                    <td>@Html.EditorFor(model => model.PhoneContact)
                        @Html.ValidationMessageFor(model => model.PhoneContact)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Email)</td>
                    <td>@Html.EditorFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Yahoo)</td>
                    <td>@Html.EditorFor(model => model.Yahoo)
                        @Html.ValidationMessageFor(model => model.Yahoo)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.Skype)</td>
                    <td>@Html.EditorFor(model => model.Skype)
                        @Html.ValidationMessageFor(model => model.Skype)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.LabelFor(model => model.NameContact)</td>
                    <td>@Html.EditorFor(model => model.NameContact)
                        @Html.ValidationMessageFor(model => model.NameContact)
                   </td>
                </tr>
                <tr>
                    <td align="left">@Html.Label("Địa điểm lân cận:")</td>
                    <td><input type="text" name="tag[]" value="" class="tag"/>
                   </td>
                </tr>
            </table>

            <div id="uploadFile">
                <fieldset>
                <label>Chọn ảnh: </label>
                <input id="file0" name="images" type="file" />
                <a href="javascript:;" onclick="return addFile();" >Thêm ảnh</a>
                </fieldset>
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>*@
        </div>
        @*<div class = "map fl_r">
            <div id="mapContainer" style="width:500px;height:380px;"></div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Lat)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Lon)
            </div>
        </div>*@
        <div class = "clear" style="clear:both;">
        </div>
}
</div>