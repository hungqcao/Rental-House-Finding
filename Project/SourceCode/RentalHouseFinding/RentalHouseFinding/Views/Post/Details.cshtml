@model RentalHouseFinding.Models.PostViewModel
@{
    ViewBag.Title = Model.Title;
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="http://maps.googleapis.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script type="text/javascript">
    function initialize() {
        var mapOptions = {
            center: new google.maps.LatLng($('#Lat').val(), $('#Lon').val()),
            zoom: 16,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById('mapContainer'),
            mapOptions);
        var marker;
        marker = new google.maps.Marker({
            position: new google.maps.LatLng($('#Lat').val(), $('#Lon').val()),
            map: map
        });
    }

    function loadScript() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&' +
            'callback=initialize';
        document.body.appendChild(script);
    }

    window.onload = loadScript;
</script>
<script>
    // Semicolon (;) to ensure closing of earlier scripting
    // Encapsulation
    // $ is assigned to jQuery
    ; (function ($) {

        // DOM Ready
        $(function () {

            // Binding a click event
            // From jQuery v.1.7.0 use .on() instead of .bind()
            $('.withOutLogin').bind('click', function (e) {

                // Prevents the default action to be triggered. 
                e.preventDefault();

                // Triggering bPopup when click event is fired
                $('#element_to_pop_up').bPopup();

            });

        });

    })(jQuery);

    (function (b) { b.fn.bPopup = function (u, C) { function v() { a.modal && b('<div class="b-modal ' + d + '"></div>').css({ backgroundColor: a.modalColor, position: "fixed", top: 0, right: 0, bottom: 0, left: 0, opacity: 0, zIndex: a.zIndex + l }).each(function () { a.appending && b(this).appendTo(a.appendTo) }).fadeTo(a.speed, a.opacity); A(); c.data("bPopup", a).data("id", d).css({ left: "slideIn" === a.transition ? -1 * (h + g) : m(!(!a.follow[0] && n || f)), position: a.positionStyle || "absolute", top: "slideDown" === a.transition ? -1 * (j + g) : p(!(!a.follow[1] && q || f)), "z-index": a.zIndex + l + 1 }).each(function () { a.appending && b(this).appendTo(a.appendTo) }); D(!0) } function r() { a.modal && b(".b-modal." + c.data("id")).fadeTo(a.speed, 0, function () { b(this).remove() }); D(); return !1 } function E(s) { var b = s.width(), d = s.height(); a.contentContainer.css({ height: d, width: b }); d <= c.height() && (d = c.height()); b <= c.width() && (b = c.width()); t = c.outerHeight(!0); g = c.outerWidth(!0); a.contentContainer.css({ height: "auto", width: "auto" }); A(); c.dequeue().animate({ left: m(!(!a.follow[0] && n || f)), top: p(!(!a.follow[1] && q || f)), height: d, width: b }, 250, function () { s.show(); w = B() }) } function D(b) { switch (a.transition) { case "slideIn": c.show().animate({ left: b ? m(!(!a.follow[0] && n || f)) : -1 * (h + g) }, a.speed, a.easing, function () { x(b) }); break; case "slideDown": c.show().animate({ top: b ? p(!(!a.follow[1] && q || f)) : -1 * (j + t) }, a.speed, a.easing, function () { x(b) }); break; default: b ? c.fadeIn(a.speed, function () { x(b) }) : c.stop().fadeOut(a.speed, a.easing, function () { x(b) }) } } function x(s) { s ? (e.data("bPopup", l), c.delegate("." + a.closeClass, "click." + d, r), a.modalClose && b(".b-modal." + d).css("cursor", "pointer").bind("click", r), !F && (a.follow[0] || a.follow[1]) && e.bind("scroll." + d, function () { w && c.dequeue().animate({ left: a.follow[0] ? m(!f) : "auto", top: a.follow[1] ? p(!f) : "auto" }, a.followSpeed, a.followEasing) }).bind("resize." + d, function () { if (w = B()) A(), c.dequeue().each(function () { f ? b(this).css({ left: h, top: j }) : b(this).animate({ left: a.follow[0] ? m(!0) : "auto", top: a.follow[1] ? p(!0) : "auto" }, a.followSpeed, a.followEasing) }) }), a.escClose && y.bind("keydown." + d, function (a) { 27 == a.which && r() }), k(C)) : (a.scrollBar || b("html").css("overflow", "auto"), b(".bModal." + d).unbind("click"), y.unbind("keydown." + d), e.unbind("." + d).data("bPopup", 0 < e.data("bPopup") - 1 ? e.data("bPopup") - 1 : null), c.undelegate("." + a.closeClass, "click." + d, r).data("bPopup", null).hide(), k(a.onClose), a.loadUrl && (a.contentContainer.empty(), c.css({ height: "auto", width: "auto" }))) } function m(a) { return a ? h + y.scrollLeft() : h } function p(a) { return a ? j + y.scrollTop() : j } function k(a) { b.isFunction(a) && a.call(c) } function A() { var b; q ? b = a.position[1] : (b = ((window.innerHeight || e.height()) - t) / 2 - a.amsl, b = b < z ? z : b); j = b; h = n ? a.position[0] : ((window.innerWidth || e.width()) - g) / 2; w = B() } function B() { return (window.innerHeight || e.height()) > c.outerHeight(!0) + z && (window.innerWidth || e.width()) > c.outerWidth(!0) + z } b.isFunction(u) && (C = u, u = null); var a = b.extend({}, b.fn.bPopup.defaults, u); a.scrollBar || b("html").css("overflow", "hidden"); var c = this, y = b(document), e = b(window), F = /OS 6(_\d)+/i.test(navigator.userAgent), z = 20, l = 0, d, w, q, n, f, j, h, t, g; c.close = function () { a = this.data("bPopup"); d = "__b-popup" + e.data("bPopup") + "__"; r() }; return c.each(function () { if (!b(this).data("bPopup")) if (k(a.onOpen), l = (e.data("bPopup") || 0) + 1, d = "__b-popup" + l + "__", q = "auto" !== a.position[1], n = "auto" !== a.position[0], f = "fixed" === a.positionStyle, t = c.outerHeight(!0), g = c.outerWidth(!0), a.loadUrl) switch (a.contentContainer = b(a.contentContainer || c), a.content) { case "iframe": b('<iframe class="b-iframe" scrolling="no" frameborder="0"></iframe>').attr("src", a.loadUrl).appendTo(a.contentContainer); k(a.loadCallback); t = c.outerHeight(!0); g = c.outerWidth(!0); v(); break; case "image": v(); b("<img />").load(function () { k(a.loadCallback); E(b(this)) }).attr("src", a.loadUrl).hide().appendTo(a.contentContainer); break; default: v(), b('<div class="b-ajax-wrapper"></div>').load(a.loadUrl, a.loadData, function () { k(a.loadCallback); E(b(this)) }).hide().appendTo(a.contentContainer) } else v() }) }; b.fn.bPopup.defaults = { amsl: 50, appending: !0, appendTo: "body", closeClass: "b-close", content: "ajax", contentContainer: !1, easing: "swing", escClose: !0, follow: [!0, !0], followEasing: "swing", followSpeed: 500, loadCallback: !1, loadData: !1, loadUrl: !1, modal: !0, modalClose: !0, modalColor: "#000", onClose: !1, onOpen: !1, opacity: 0.7, position: ["auto", "auto"], positionStyle: "absolute", scrollBar: !0, speed: 250, transition: "fadeIn", zIndex: 9997} })(jQuery);
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#message_submit").click(function () {
            if ($("#txtResion").val() == '') {
                $("#rpMessage").css("display", "inline");
                $("#txtResion").focus();
            }
            else {
                var mydata = { postId: $("#Id").val(), resion: $("#txtResion").val() };
                SendRepost(mydata);
                alert("Cảm ơn sự đóng góp của bạn!");
                deselect();
                $("#report").addClass("reported");
                $("#txtResion").val('');
            }

        });
        function deselect() {
            $(".pop").slideFadeToggle(function () {
                $("#report").removeClass("selected");
            });
        }

            $("#report").live('click', function () {
                $("#txtResion").val('');
                if ($(this).hasClass("reported")) {
                    alert("Báo cáo hoàn tất! Ban quan trị sẽ kiểm tra lại trong thời gian sớm nhất.");
                }
                else {
                    if ($(this).hasClass("selected")) {
                        deselect();
                    } else {
                        $(this).addClass("selected");
                        $(".pop").slideFadeToggle(function () {
                            $("#resion").focus();
                        });
                    }
                }
                return false;
            });

            $("#message_cancel").live('click', function () {
                deselect();
                return false;
            });

        $.fn.slideFadeToggle = function (easing, callback) {
            return this.animate({ opacity: 'toggle', height: 'toggle' }, "fast", easing, callback);
        };


        function SendRepost(mydata) {
            $.ajax({
                url: "/service/ReportPost",
                type: "POST",
                data: mydata,
                error: function () {
                    //alert("");
                },
                success: function () {
                }
            });
        }

    });

    function favorite() {
        if ($("#favorite").val() == 'Thêm vào danh mục') {
            $.getJSON("/Post/AddFavorite", null, function (success) {
                if (success) {
                    alert('Đã thêm bài vào danh mục');
                    $("#favorite").attr('value', 'Gỡ khỏi danh mục');
                }
            });
        } else if ($("#favorite").val() == 'Gỡ khỏi danh mục') {
            $.getJSON("/Post/RemoveFavorite", null, function (success) {
                if (success) {
                    alert('Đã xóa bài khỏi danh mục');
                    $("#favorite").attr('value', 'Thêm vào danh mục');
                }
            });
        }
    }
</script>

<div id="message" class="success-mess">
    @TempData["MessageSuccessPostNew"]
</div>
<div id="popup_wrapper">
    <div class="popup_header">
        <div>
            <span class="type">[@Model.Category]</span><span class="address">&nbsp;@Model.NumberHouse @Model.Street</span>
            <div class="clear"></div>
            <span class="shortDesc">@Model.Title</span>
        </div>
        <div class="rightInfo" style="float: right;">
            <div><span class="highlight">@Model.Price</span><span class="rightText">triệu VND</span></div>
            <div><span class="highlight">@Model.Area</span><span class="rightText">m2</span></div>
        </div>
    </div>
    <div class="clear"></div>
    <div class="popup_content">
        <div class="blockInfo leftSide">
            <div class="title"><div class="plusBtn"></div>THÔNG TIN CƠ BẢN</div>
            <div class="clear"></div>
            <span class="blockLeftText" style="width: 100%;"><b>Địa chỉ:</b>&nbsp;@Model.NumberHouse @Model.Street </span>
            <div class="clear"></div>
            <span class="blockLeftText"><b>Giá nhà:</b>&nbsp;@Model.Price triệu/tháng</span>
            <span class="blockRightText"><b>Diện tích:</b>&nbsp;@Model.Area m2</span>
            <span class="blockLeftText"><b>Giá điện:</b>&nbsp;@Model.ElectricityFee triệu/tháng</span>
            <span class="blockRightText"><b>Giá nước:</b>&nbsp;@Model.WaterFee triệu/tháng</span>
            <span class="blockLeftText"><b>Hướng nhà:</b>&nbsp;@Model.Direction</span>
            <span class="blockRightText"><b>Ngày đăng:</b>&nbsp;@Model.CreatedDate</span>
            <span class="blockLeftText" style="margin-top:10px;"><b>Liên hệ:</b>&nbsp;@Model.NameContact</span>
            <div class="clear"></div>
            <span class="blockLeftText"><b>Di động:</b>&nbsp;@Model.PhoneContact</span>
            <span class="blockRightText"><b>Yahoo!, Skype:</b>&nbsp;@Model.Skype</span>
            <span class="blockLeftText" style="width: 95%;"><b>Ghi chú:</b>&nbsp;@Model.Description</span>
        </div>
        <div class="blockInfo rightSide">
            <div class="title">
                <div class="plusBtn"></div>HÌNH ẢNH
            </div>
            @Html.Partial("_ImagesPartial")
        </div>
        <div class="clear"></div>
        <div class="blockInfo leftSide">
            <div class="title"><div class="plusBtn"></div>TIỆN ÍCH DỊCH VỤ BÊN TRONG</div>
            <div class="clear"></div>
            <div class="colLeft">
                @if (Model.HasInternet)
                {
                    <span class="icon check">Internet</span>
                }
                else
                {
                    <span class="icon question">Internet</span>
                }
                @if (Model.HasBed)
                {
                    <span class="icon check">Giường, tủ</span>
                }
                else
                {
                    <span class="icon question">Giường, tủ</span>
                }
                @if (Model.HasSecurity)
                {
                    <span class="icon check">Bảo vệ</span>
                }
                else
                {
                    <span class="icon question">Bảo vệ</span>
                }
                @if (Model.HasToilet)
                {
                    <span class="icon check">WC riêng</span>
                }
                else
                {
                    <span class="icon question">WC riêng</span>
                }
                @if (Model.IsStayWithOwner)
                {
                    <span class="icon check">Chung chủ</span>
                }
                else
                {
                    <span class="icon question">Chung chủ</span>
                }
            </div>
            <div class="colRight">
                @if (Model.HasTVCable)
                {
                    <span class="icon check">Tivi, truyền hình cáp</span>
                }
                else
                {
                    <span class="icon question">Tivi, truyền hình cáp</span>
                }
                @if (Model.HasMotorParking)
                {
                    <span class="icon check">Bãi đỗ xe</span>
                }
                else
                {
                    <span class="icon question">Bãi đỗ xe</span>
                }
                @if (Model.IsAllowCooking)
                {
                    <span class="icon check">Cho phép nấu ăn</span>
                }
                else
                {
                    <span class="icon question">Cho phép nấu ăn</span>
                }
                @if (Model.HasWaterHeater)
                {
                    <span class="icon check">Bình nóng lạnh</span>
                }
                else
                {
                    <span class="icon question">Bình nóng lạnh</span>
                }
                @if (Model.HasGarage)
                {
                    <span class="icon check">Gara ôtô</span>
                }
                else
                {
                    <span class="icon question">Gara ôtô</span>
                }
            </div>
        </div>
        <div class="blockInfo rightSide" id="block4">
                <div class="clear"></div>
                <div class="title"><div class="plusBtn"></div>VỊ TRÍ TRÊN BẢN ĐỒ</div>
                <div class="map_wrapper" style="border:1px solid #bebebe">
                    <div class = "map" style="margin: 5px">
                        <div id="mapContainer" style="width:400px;height:380px;"></div>
                            @Html.HiddenFor(model => model.Lat)
                            @Html.HiddenFor(model => model.Lon)
                    </div>
                </div>
        </div>
        <div class="blockInfo leftSide" id="block5">
                <div class="clear"></div>
                <div class="title"><div class="plusBtn"></div>ĐỊA ĐIỂM LỚN XUNG QUANH</div>
                <span class="desc">@Model.NearByPlace</span>
        </div>
        <div class="blockInfo rightSide" id="block6">
                <div class="clear"></div>
                <div class="title"><div class="plusBtn"></div>HỎI ĐÁP</div>
                <div id="Question">
                    @if (Model.UserId != null && !Model.CreatedBy.Equals(User.Identity.Name, StringComparison.CurrentCultureIgnoreCase))
                    {
                        if (Request.IsAuthenticated)
                        {
                            @Html.Partial("_Question", new RentalHouseFinding.Models.QuestionViewModel(), new ViewDataDictionary { { "userId", Model.UserId } })
                        }
                        else
                        {
                            <text>Bạn cần phải đăng nhập để thực hiện chức năng này</text>
                        }
                    }
                </div>
        </div>
        <div class="clear"></div>
        <div id="sendQuestion">
            <div id = "ReportPost">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="reportpop pop" id="element_to_pop_up">
                    <form method="post" id="new_message" action="/messages">                    
                        <div class="display-label">Lý do:</div>
                        <div><textarea rows="6" name="body" id="txtResion" cols="28"></textarea></div>
                        <div id ="rpMessage" style="color:Red; display:none;">Vui lòng cung cấp lý do</div>
                        <div id="report-form">

                        <input class="button_report" type="button" value="Gửi" name="commit" id="message_submit"/> or <input type="button" class="close b-close button_report" value="Hủy" name="commit" id="message_cancel"/>
                        </div>
                        <div class="clear"></div>    
                    </form>
                </div>
                
                <div class="clear"></div>
            }
            else
            {    
                <!-- Element to pop up -->
                <div id="element_to_pop_up" class="login-form" style="margin: 0 auto; width: 635px;">
                    <a class="b-close">x</a>
                    <div style="font-size:30px; color:Black">Bạn cần 
                    <a style="color:Black;" href="@Request.Url.AbsoluteUri.Replace(@Request.Url.Authority, Request.Url.Authority + "/account/logon?returnUrl=")">đăng nhập</a>
                    để sử dụng chức năng này</div>
                    
                    <div style="font-size:20px;color:Black">Đăng nhập nhanh chóng với tài khoản của Google, Yahoo, Facebook</div>
                </div>
                <div class="clear"></div>
            }
            </div>  
            <div id="reportWithoutLogin" class="withOutLoginReport"><img src="@Url.Content("~/Content/images/triangle_comment.png")"/></div>
            <div class="clear"></div>
            <span>Gửi câu hỏi thắc mắc cho người đăng!</span>
        </div>
        <div id="saveBookmark">
            @{

                if (ViewBag.RemoveFavorite == false)
                {
                    <div id="favorite" onclick="addFavorite();" class="withOutLogin"><img src="@Url.Content("~/Content/images/triangle_fav.png")"/></div>
                    
                }
                else if (ViewBag.RemoveFavorite == true)
                {
                    <div id="favorite" onclick="removeFavorite();" class="withOutLogin"><img src="@Url.Content("~/Content/images/triangle_fav.png")"/></div>
                       
                }
                if (!User.Identity.IsAuthenticated)
                {
                    <div id="favorite" class="withOutLoginFav"><img src="@Url.Content("~/Content/images/triangle_fav.png")"/></div>
                }
            }
            <span>Bạn quan tâm bài đăng này, bạn hãy lưu lại! </span>
        </div>
        <div class="clear"></div>
    </div>
    <div class="clear"></div>
</div>       