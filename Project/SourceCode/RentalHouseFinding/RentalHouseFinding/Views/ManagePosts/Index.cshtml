@model RentalHouseFinding.Models.ManagePostsModel
@{
    Uri auxBaseUri = new Uri(Request.Url.GetLeftPart(UriPartial.Authority));
    Uri baseUri = new Uri(auxBaseUri, Url.Content("~"));
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Managa Posts";
}
<script>
    $(document).ready(function () {
        $('a[href="#"]').live('click', function (event) {
            event.preventDefault();
        });
        $("#created_date_from").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#created_date_to").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#edited_date_from").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#edited_date_to").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#renewed_date_from").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#renewed_date_to").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#expire_date_from").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
        $("#expire_date_to").datepicker({ dateFormat: 'yy/mm/dd', changeMonth: true, changeYear: true });
    });
</script>
<script src="@Url.Content("~/Scripts/RHFScripts.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" />
@using (Html.BeginForm("Index", "ManagePosts", FormMethod.Post))
{
    <fieldset>
        <table>
        <tr>
            <th>
                User ID
            </th>
            <th>
                Tỉnh/Thành phố
            </th>
            <th>
                Quận/Huyện
            </th>
            <th>
                Phân loại
            </th>
            <th>
                Trạng thái
            </th>
        </tr>
            <tr>
            <td>@Html.DropDownListFor(model => model.UserId, 
                    (IEnumerable<SelectListItem>)ViewBag.Users, 
                    "User", 
                    new {@class="select"})
                @Html.ValidationMessageFor(model => model.UserId)</td>
            <td>@Html.DropDownListFor(model => model.ProvinceId, 
                    (IEnumerable<SelectListItem>)ViewBag.Provinces,
                    "Tỉnh/Thành phố", 
                    new {@class="select"})
                @Html.ValidationMessageFor(model => model.ProvinceId)</td>
            <td>@Html.DropDownListFor(model => model.DistrictId,
                    (IEnumerable<SelectListItem>)ViewBag.Districts,
                    "Chọn Quận/Huyện", new { @class = "select" })
                @Html.ValidationMessageFor(model => model.DistrictId)</td>
            <td>@Html.DropDownListFor(model => model.CategoryId,
                    (IEnumerable<SelectListItem>)ViewBag.Categories,
                    "Phân loại", new { @class = "select" })
                @Html.ValidationMessageFor(model => model.CategoryId)</td>
            <td>@Html.DropDownListFor(model => model.StatusId,
                    (IEnumerable<SelectListItem>)ViewBag.Statuses,
                    "Trạng thái", new { @class = "select" })
                @Html.ValidationMessageFor(model => model.StatusId)</td>
            </tr>
        </table>
        <table>
        <tr>
            <th>
                Ngày tạo
            </th>
            <th>
                Lần sửa cuối
            </th>
            <th>
                Lần gia hạn cuối
            </th>
            <th>
                Ngày hết hạn
            </th>
        </tr>
        <tr>
            <td>Từ @Html.TextBoxFor(model => model.CreatedDateFrom, 
                        new { @id = "created_date_from", @readonly = "readonly" })<br/>
                Đến @Html.TextBoxFor(model => model.CreatedDateTo,
                    new { @id = "created_date_to", @readonly = "readonly" })</td>

            <td>Từ @Html.TextBoxFor(model => model.EditedDateFrom, 
                        new { @id = "edited_date_from", @readonly = "readonly" })<br/>
                Đến @Html.TextBoxFor(model => model.EditedDateTo,
                    new { @id = "edited_date_to", @readonly = "readonly" })</td>

            <td>Từ @Html.TextBoxFor(model => model.RenewedDateFrom,
                        new { @id = "renewed_date_from", @readonly = "readonly" })<br/>
                Đến @Html.TextBoxFor(model => model.RenewedDateTo,
                    new { @id = "renewed_date_to", @readonly = "readonly" })</td>

            <td>Từ @Html.TextBoxFor(model => model.ExpireDateFrom,
                        new { @id = "expire_date_from", @readonly = "readonly" })<br/>
                Đến @Html.TextBoxFor(model => model.ExpireDateTo,
                    new { @id = "expire_date_to", @readonly = "readonly" })</td>
        </tr>
        </table>
        <input type="submit" value="Search" id="search"/>
    </fieldset>
}
<br>
<div id="container-grid">
@{
    if (Model != null)
    {
        WebGrid grid = Model.Grid;
        <span>Tìm thấy @grid.TotalRowCount bài post</span>
        @grid.GetHtml(tableStyle: "webGrid", mode: WebGridPagerModes.All,
                            headerStyle: "header",
                            alternatingRowStyle: "alt",
                            htmlAttributes: new { id = "grid" },
                            columns: grid.Columns(
                                     grid.Column(header: "STT", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + ViewBag.Index),
                                     //grid.Column("ID", "Id"),
                                     grid.Column("User", "Người đăng", format: (item) => String.IsNullOrEmpty(item.User)?"Khách":item.User),
                                grid.Column(header: "Tiêu đề", format: @<text>
                                        <a href="@Url.Action("Details",
                                        "Post",
                                        new { id = @item.ID })">@item.Title</a></text>),
                                grid.Column("Category", "Phân loại"),
                                grid.Column("PostStatus", "Trạng thái"),
                                grid.Column("CreatedDate", "Ngày tạo",
                                    format: (item) => string.Format("{0:yyyy-MM-dd HH:mm:ss}", item.CreatedDate)),
                                grid.Column("EditedDate", "Lần sửa cuối",
                                    format: (item) => item.EditedDate == null ? "" : string.Format("{0:yyyy-MM-dd HH:mm:ss}", item.EditedDate)),
                                grid.Column("RenewDate", "Lần gia hạn cuối",
                                    format: (item) => item.RenewDate == null ? "" : string.Format("{0:yyyy-MM-dd HH:mm:ss}", item.RenewDate)),
                                grid.Column("ExpiredDate", "Ngày hết hạn", 
                                    format: (item) => string.Format("{0:yyyy-MM-dd HH:mm:ss}", item.ExpiredDate)),
                                grid.Column("CountRenew", "Số lần đã gia hạn")
                                    
                                ));
    }
}

</div>