@model RentalHouseFinding.Models.SearchViewModel
@{
    ViewBag.Title = "Advanced search";
}
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" />
<script src="@Url.Content("~/Scripts/advSearch.js")" type="text/javascript"></script>
<script>
    //for validate number message.
    (function ($) {
        // Walk through the adapters that connect unobstrusive validation to jQuery.validate.
        // Look for all adapters that perform number validation
        $.each($.validator.unobtrusive.adapters, function () {
            if (this.name === "number") {
                // Get the method called by the adapter, and replace it with one 
                // that changes the message to the jQuery.validate default message
                // that can be globalized. If that string contains a {0} placeholder, 
                // it is replaced by the field name.
                var baseAdapt = this.adapt;
                this.adapt = function (options) {
                    var fieldName = new RegExp("The field (.+) must be a number").exec(options.message)[1];
                    options.message = $.validator.format($.validator.messages.number, fieldName);
                    baseAdapt(options);
                };
            }
        });
    } (jQuery));
</script>

<script type="text/javascript">
    $(document.documentElement).keydown(function (e) {
        var enterKey = 13;
        if (e.which == enterKey)
            $("form").submit();
    });
</script> 
<script>    
    $(document).ready(function () {
        $(".rangePrice").change(function () {
            $("#Price").find(".field-validation-error").children().css("display", "none");
            $(".rangePrice").removeClass('input-validation-error')
        });
        $(".rangeArea").change(function () {
            $("#Area").find(".field-validation-error").children().css("display", "none");
            $(".rangeArea").removeClass('input-validation-error')
        });
    });

</script>

@Html.ValidationSummary(true, "Vui lòng kiểm tra lại thông tin như thông báo bên dưới!", new { style = "color:red" })
@using (Html.BeginForm())
{
    <div id="as_wrapper">
        <div class="helloText searchText">
            <div class="helloLine searchLine"></div>
            <span>Tìm kiếm nâng cao</span>
            <div class="helloLine searchLine"></div>
        </div>
        <div class="clear"></div>
        <h1 style="margin-top: 20px;">Bạn đã hiểu rất rõ nhu cầu tìm kiếm của mình? Hãy bắt đầu ngay:</h1>
        <h1 class="blockTitle">1. Thông tin cơ bản</h1>
        <div class="clear"></div>
        <div class="basicInfo">
            @Html.DropDownListFor(model => model.CategoryId, null, new { @class = "select", @id = "ddlOptions" })
            @Html.DropDownListFor(model => model.ProvinceId, null, new { @id = "ddlCity", @class="select"})
            @Html.DropDownListFor(model => model.DistrictId, null, new { id = "ddlDistrict", @class = "select" })
            <div class="clear"></div>
            <div id ="Price" class="field ">
                <span>Giá tiền (triệu VND/tháng)</span>
                <div class="clear"></div>
                <div id="fromPrice">
                <span>Từ</span>
                <div>@Html.TextBoxFor(model => model.PriceMin, new { @id = "fromPrice", @class = "range rangePrice", @placeholder = "" })</div>
                @Html.ValidationMessageFor(model => model.PriceMax)
                </div>
                <div id="toPrice">
                <span>Tới</span>
                @Html.TextBoxFor(model => model.PriceMax, new { @id = "toPrice", @class = "range rangePrice", @placeholder = "" })                
                @Html.ValidationMessageFor(model => model.PriceMin)
                </div>                
            </div>
            <div id="Area" class="field ">
                <span>Diện tích (m2)</span>
                <div class="clear"></div>
                <div id="minArea">
                <span>Từ</span>
                @Html.TextBoxFor(model => model.AreaMin, new { @id = "fromArea", @class = "range rangeArea", @placeholder = "" })
                @Html.ValidationMessageFor(model => model.AreaMin)
                </div>
                <div id ="maxArea">
                <span>Tới</span>
                @Html.TextBoxFor(model => model.AreaMax, new { @id = "toArea", @class = "range rangeArea", @placeholder = "" })
                @Html.ValidationMessageFor(model => model.AreaMax)
                </div>
            </div>
        </div>
        <div class="clear"></div>
        <h1 class="blockTitle">2. Các tiện ích, dịch vụ bên trong bao gồm:</h1>
        <div class="clear"></div>
        <div class="otherInfo">
            <div class="col" style="margin-left: 160px;">
                <div class="row">
                    <h2>Internet</h2>
                    @Html.DropDownListFor(model => model.HasInternetScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlInternet", @class = "select" })
                </div>
                <div class="row">
                    <h2>Giường, tủ</h2>
                    @Html.DropDownListFor(model => model.HasBedScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlGiuongTu", @class = "select" })
                </div>
                <div class="row">
                    <h2>Bảo vệ</h2>
                    @Html.DropDownListFor(model => model.HasSecurityScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlBaoVe", @class = "select" })
                </div>
                <div class="row">
                    <h2>WC riêng</h2>
                    @Html.DropDownListFor(model => model.HasToiletScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlWcRieng", @class = "select" })
                </div>
                <div class="row">
                    <h2>Bãi đỗ xe</h2>
                    @Html.DropDownListFor(model => model.HasMotorParkingScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlDoXe", @class = "select" })
                </div>
                <div class="row">
                    <h2>Cho nấu ăn</h2>
                    @Html.DropDownListFor(model => model.IsAllowCookingScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlNauAn", @class = "select" })
                </div>
            </div>
            <div class="col">
                <div class="row">
                    <h2>Bình nóng lạnh</h2>
                    @Html.DropDownListFor(model => model.HasWaterHeaterScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlNongLanh", @class = "select" })
                </div>
                <div class="row">
                    <h2>Điều hoà</h2>
                    @Html.DropDownListFor(model => model.HasAirConditionerScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlDieuHoa", @class = "select" })
                </div>
                <div class="row">
                    <h2>Chung chủ</h2>
                    @Html.DropDownListFor(model => model.IsStayWithOwnerScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlChungChu", @class = "select" })
                </div>
                <div class="row">
                    <h2>Tivi, cáp quang</h2>
                    @Html.DropDownListFor(model => model.HasTVCableScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlTv", @class = "select" })
                </div>
                <div class="row">
                    <h2>Gara ôtô</h2>
                    @Html.DropDownListFor(model => model.HasGarageScore, (IEnumerable<SelectListItem>)ViewBag.Score, new { id = "ddlGarage", @class = "select" })
                </div>
            </div>
            <div class="clear"></div>
        </div>            
        <div id="btnSearch_wrapper">
            <input type="submit" id="btnAdvancedSearch" value=""/>
        </div>
        <div class="clear"></div>
    </div>
}
@section head{
    <script type="text/javascript">
        $(document).ready(function () {
            $('select.select').each(function () {
                var title = $(this).attr('title');
                var id = $(this).attr('id');
                if ($('option:selected', this).val() != '') {
                    title = $('option:selected', this).text();
                } else {
                    $('option:selected', this).val('0');
                    title = $('option:selected', this).val('0').text();
                }
                $(this)
                .css({ 'opacity': 0 })
                .after('<span class="select" id="sp' + id + '">' + title + '</span>')
                .change(function () {
                    val = $('option:selected', this).text();
                    $(this).next().text(val);
                })
            });
        });
        </script>
}