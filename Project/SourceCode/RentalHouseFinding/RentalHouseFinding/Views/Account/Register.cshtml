@model RentalHouseFinding.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" />

<link href="@Url.Content("~/Content/openid-shadow.css")"
    rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/openid.css")" 
    rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/openid-en.js")" 
    type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/openid-jquery.js")" 
    type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Facebook.js")" type="text/javascript"></script>    
<script type="text/javascript">
    $(document).ready(function () {
        openid.init('openid_identifier');
    });
</script>
<div id="fb-root"></div>
<script type="text/javascript">
    /*This Method will be invoked on lick on Facebook button*/
    function FBLogin() {
        debugger;
        InitialiseFacebook("476765599060884");
        //FB.login(FBCallBack);        
    }   
</script>  
<script type="text/javascript">
    jQuery.validator.unobtrusive.adapters.add(
        'requiredif', ['other'], function (options) {

            var getModelPrefix = function (fieldName) {
                return fieldName.substr(0, fieldName.lastIndexOf('.') + 1);
            }

            var appendModelPrefix = function (value, prefix) {
                if (value.indexOf('*.') === 0) {
                    value = value.replace('*.', prefix);
                }
                return value;
            }

            var prefix = getModelPrefix(options.element.name),
                other = options.params.other,
                fullOtherName = appendModelPrefix(other, prefix),
                element = $(options.form).find(':input[name="' + fullOtherName + '"]')[0];

            options.rules['requiredif'] = element;
            if (options.message) {
                options.messages['requiredif'] = "Bạn phải nhập Email hoặc Số điện thoại";
            }
        }
    );

    jQuery.validator.addMethod('requiredif', function (value, element, params) {
        var otherValue = $(params).val();
        if (otherValue != null && otherValue != '') {
            return true;
        }
        return value != null && value != '';
    }, '');
</script>
<div class="helloText">
    <div class="helloLine"></div>
    <span>Chào bạn!</span>
    <div class="helloLine"></div>
</div>
<div class="clear"></div>

    <div id="regisPanel" class="login-regis">
        <div class="title">
            <h1>Đăng kí</h1>
            <h2>Bạn nên đăng kí để có những tiện ích hỗ trợ tốt nhất.</h2>
        </div>
        <div class="clear"></div>
        <form action="Authenticate?ReturnUrl=@HttpUtility.UrlEncode(Request.QueryString["ReturnUrl"])" method="post" id="openid_form">
            <input type="hidden" name="action" value="verify" />
            <div class="socials">   
                <h2>Đăng nhập nhanh với các tài khoản có sẵn của bạn tại:</h2>
                <div class="openid_choice">
                    <div id="openid_btns">
                    </div>
                </div>
                <div id ="loading" style="display:none">
                <img alt="login loading" src="/Content/images/loading.gif">
                </div>
            </div>
        </form>
       
        <div class="clear"></div>
        @using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
        <div class="userInfo">
            <h2>Đăng kí tài khoản 5house.vn chỉ với 1 bước đơn giản</h2>
            <div class="blockInfo leftBlock" id="blockName">
                <label>@Html.LabelFor(m => m.UserName)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
            </div>
            <div class="blockInfo" id="blockPhone">
                <label>@Html.LabelFor(m => m.Name)</label>
                <div class="clear"></div>
                <div class="textbox">
                   @Html.TextBoxFor(m => m.Name, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock" id="blockEmail">                
                <label>@Html.LabelFor(m => m.Password)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.PasswordFor(m => m.Password, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>
            <div class="blockInfo" id="blockEmailRetype">
                <label>@Html.LabelFor(m => m.ConfirmPassword)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock" id="blockPassword">
                <label>@Html.LabelFor(m => m.Email)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.Email, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="blockInfo" id="blockPasswordRetype">
                <label>@Html.LabelFor(m => m.PhoneNumber)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock lastBlock">
                <label>@Html.LabelFor(m => m.CaptchaText)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.CaptchaText, new { @class = "tbxRegisterCapcha" })
                    @Html.ValidationMessageFor(m => m.CaptchaText)         
                </div>
               
                <div class="textbox" style="margin-left:95px">
                   
                    <p><img src="/account/ShowCaptchaImage" /></p>
                    @ViewBag.Message
                </div>
            </div>
            <div class="blockInfo lastBlock" id="blockBtnRegis">
                <div class="clear"></div>
                <div>
                    <input type="checkbox" id="rAccept"/>
                    <label>Tôi đồng ý với điều khoản sử dụng</label>
                </div>
                <input type="submit" id="btnRegis" value=""/>
            </div>
        </div>
    
}
</div>