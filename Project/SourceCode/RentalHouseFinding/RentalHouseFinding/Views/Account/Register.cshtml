@model RentalHouseFinding.Models.RegisterModel
@using Recaptcha;

@{
    ViewBag.Title = "Register";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" />
<script type="text/javascript" language="javascript">
    $.validator.unobtrusive.adapters.addBool("mandatory", "required");
    </script>
<link href="@Url.Content("~/Content/openid-shadow.css")"
    rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/openid.css")" 
    rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/openid-en.js")" 
    type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/openid-jquery.js")" 
    type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Facebook.js")" type="text/javascript"></script>    
<script type="text/javascript">
    $(document).ready(function () {
        openid.init('openid_identifier');
    });
</script>
<div id="fb-root"></div>
<script type="text/javascript">
    /*This Method will be invoked on lick on Facebook button*/
    function FBLogin() {
        InitialiseFacebook("476765599060884");
        //FB.login(FBCallBack);        
    }   
</script>
<script>
    ; (function ($) {

        // DOM Ready
        $(function () {
            // Binding a click event
            // From jQuery v.1.7.0 use .on() instead of .bind()
            $('#showDK').bind('click', function (e) {

                // Prevents the default action to be triggered. 
                e.preventDefault();

                // Triggering bPopup when click event is fired
                $('#element_to_pop_up').bPopup();


            });
        });

    })(jQuery);

    /*================================================================================
    ================================================================================*/
    (function (b) { b.fn.bPopup = function (u, C) { function v() { a.modal && b('<div class="b-modal ' + d + '"></div>').css({ backgroundColor: a.modalColor, position: "fixed", top: 0, right: 0, bottom: 0, left: 0, opacity: 0, zIndex: a.zIndex + m }).appendTo(a.appendTo).fadeTo(a.speed, a.opacity); A(); c.data("bPopup", a).data("id", d).css({ left: "slideIn" === a.transition ? -1 * (j + h) : n(!(!a.follow[0] && p || f)), position: a.positionStyle || "absolute", top: "slideDown" === a.transition ? -1 * (k + h) : q(!(!a.follow[1] && r || f)), "z-index": a.zIndex + m + 1 }).each(function () { a.appending && b(this).appendTo(a.appendTo) }); D(!0) } function s() { a.modal && b(".b-modal." + c.data("id")).fadeTo(a.speed, 0, function () { b(this).remove() }); D(); return !1 } function E(g) { var b = g.width(), d = g.height(); a.contentContainer.css({ height: d, width: b }); d <= c.height() && (d = c.height()); b <= c.width() && (b = c.width()); t = c.outerHeight(!0); h = c.outerWidth(!0); a.contentContainer.css({ height: "auto", width: "auto" }); A(); c.dequeue().animate({ left: n(!(!a.follow[0] && p || f)), top: q(!(!a.follow[1] && r || f)), height: d, width: b }, 250, function () { g.show(); w = B() }) } function D(b) { switch (a.transition) { case "slideIn": c.show().animate({ left: b ? n(!(!a.follow[0] && p || f)) : -1 * (j + h) }, a.speed, a.easing, function () { x(b) }); break; case "slideDown": c.show().animate({ top: b ? q(!(!a.follow[1] && r || f)) : -1 * (k + t) }, a.speed, a.easing, function () { x(b) }); break; default: b ? c.fadeIn(a.speed, function () { x(b) }) : c.stop().fadeOut(a.speed, a.easing, function () { x(b) }) } } function x(g) { g ? (e.data("bPopup", m), c.delegate(".bClose, ." + a.closeClass, "click." + d, s), a.modalClose && b(".b-modal." + d).css("cursor", "pointer").bind("click", s), !F && (a.follow[0] || a.follow[1]) && e.bind("scroll." + d, function () { w && c.dequeue().animate({ left: a.follow[0] ? n(!f) : "auto", top: a.follow[1] ? q(!f) : "auto" }, a.followSpeed, a.followEasing) }).bind("resize." + d, function () { if (w = B()) A(), c.dequeue().each(function () { f ? b(this).css({ left: j, top: k }) : b(this).animate({ left: a.follow[0] ? n(!0) : "auto", top: a.follow[1] ? q(!0) : "auto" }, a.followSpeed, a.followEasing) }) }), a.escClose && y.bind("keydown." + d, function (a) { 27 == a.which && s() }), l(C)) : (a.scrollBar || b("html").css("overflow", "auto"), b(".b-modal." + d).unbind("click"), y.unbind("keydown." + d), e.unbind("." + d).data("bPopup", 0 < e.data("bPopup") - 1 ? e.data("bPopup") - 1 : null), c.undelegate(".bClose, ." + a.closeClass, "click." + d, s).data("bPopup", null).hide(), l(a.onClose), a.loadUrl && (a.contentContainer.empty(), c.css({ height: "auto", width: "auto" }))) } function n(a) { return a ? j + y.scrollLeft() : j } function q(a) { return a ? k + y.scrollTop() : k } function l(a) { b.isFunction(a) && a.call(c) } function A() { var b; r ? b = a.position[1] : (b = ((window.innerHeight || e.height()) - t) / 2 - a.amsl, b = b < z ? z : b); k = b; j = p ? a.position[0] : ((window.innerWidth || e.width()) - h) / 2; w = B() } function B() { return (window.innerHeight || e.height()) > c.outerHeight(!0) + z && (window.innerWidth || e.width()) > c.outerWidth(!0) + z } b.isFunction(u) && (C = u, u = null); var a = b.extend({}, b.fn.bPopup.defaults, u); a.scrollBar || b("html").css("overflow", "hidden"); var c = this, y = b(document), e = b(window), F = /OS 6(_\d)+/i.test(navigator.userAgent), z = 20, m = 0, d, w, r, p, f, k, j, t, h; c.close = function () { a = this.data("bPopup"); d = "__b-popup" + e.data("bPopup") + "__"; s() }; return c.each(function () { if (!b(this).data("bPopup")) if (l(a.onOpen), m = (e.data("bPopup") || 0) + 1, d = "__b-popup" + m + "__", r = "auto" !== a.position[1], p = "auto" !== a.position[0], f = "fixed" === a.positionStyle, t = c.outerHeight(!0), h = c.outerWidth(!0), a.loadUrl) switch (a.contentContainer = b(a.contentContainer || c), a.content) { case "iframe": var g = b('<iframe class="b-iframe" scrolling="no" frameborder="0"></iframe>'); g.appendTo(a.contentContainer); t = c.outerHeight(!0); h = c.outerWidth(!0); v(); g.attr("src", a.loadUrl); l(a.loadCallback); break; case "image": v(); b("<img />").load(function () { l(a.loadCallback); E(b(this)) }).attr("src", a.loadUrl).hide().appendTo(a.contentContainer); break; default: v(), b('<div class="b-ajax-wrapper"></div>').load(a.loadUrl, a.loadData, function () { l(a.loadCallback); E(b(this)) }).hide().appendTo(a.contentContainer) } else v() }) }; b.fn.bPopup.defaults = { amsl: 50, appending: !0, appendTo: "body", closeClass: "b-close", content: "ajax", contentContainer: !1, easing: "swing", escClose: !0, follow: [!0, !0], followEasing: "swing", followSpeed: 500, loadCallback: !1, loadData: !1, loadUrl: !1, modal: !0, modalClose: !0, modalColor: "#000", onClose: !1, onOpen: !1, opacity: 0.7, position: ["auto", "auto"], positionStyle: "absolute", scrollBar: !0, speed: 250, transition: "fadeIn", zIndex: 9997} })(jQuery);
</script>  
<script type="text/javascript">
    jQuery.validator.unobtrusive.adapters.add(
        'requiredif', ['other'], function (options) {

            var getModelPrefix = function (fieldName) {
                return fieldName.substr(0, fieldName.lastIndexOf('.') + 1);
            }

            var appendModelPrefix = function (value, prefix) {
                if (value.indexOf('*.') === 0) {
                    value = value.replace('*.', prefix);
                }
                return value;
            }

            var prefix = getModelPrefix(options.element.name),
                other = options.params.other,
                fullOtherName = appendModelPrefix(other, prefix),
                element = $(options.form).find(':input[name="' + fullOtherName + '"]')[0];

            options.rules['requiredif'] = element;
            if (options.message) {
                options.messages['requiredif'] = "Bạn phải nhập Email hoặc Số điện thoại";
            }
        }
    );

    jQuery.validator.addMethod('requiredif', function (value, element, params) {
        var otherValue = $(params).val();
        if (otherValue != null && otherValue != '') {
            return true;
        }
        return value != null && value != '';
    }, '');
</script>
<div class="helloText">
    <div class="helloLine"></div>
    <span>Chào bạn!</span>
    <div class="helloLine"></div>
</div>
<div class="clear"></div>

    <div id="regisPanel" class="login-regis">
        <div class="title">
            <h1>Đăng kí</h1>
            <h2>Bạn nên đăng kí để có những tiện ích hỗ trợ tốt nhất.</h2>
        </div>
        <div class="clear"></div>
        <form action="Authenticate?ReturnUrl=@HttpUtility.UrlEncode(Request.QueryString["ReturnUrl"])" method="post" id="openid_form">
            <input type="hidden" name="action" value="verify" />
            <div class="socials">   
                <h2>Đăng nhập nhanh với các tài khoản có sẵn của bạn tại:</h2>
                <div class="openid_choice">
                    <div id="openid_btns">
                    </div>
                </div>
                <div id ="loading" style="display:none">
                <img alt="login loading" src="/Content/images/loading.gif">
                </div>
            </div>
        </form>
       
        <div class="clear"></div>
    @using (Html.BeginForm()) {
        <div class="userInfo">
            <h2>Đăng kí tài khoản 5house.vn chỉ với 1 bước đơn giản</h2>
            <div class="blockInfo leftBlock requiredField" requiredField" id="blockName">
                <label>@Html.LabelFor(m => m.UserName)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
            </div>
            <div class="blockInfo requiredField" id="blockPhone">
                <label>@Html.LabelFor(m => m.Email)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.Email, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock requiredField" id="blockEmail">                
                <label>@Html.LabelFor(m => m.Password)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.PasswordFor(m => m.Password, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>
            <div class="blockInfo requiredField" id="blockEmailRetype">
                <label>@Html.LabelFor(m => m.ConfirmPassword)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock requiredField" id="blockPassword">
                <label>@Html.LabelFor(m => m.Name)</label>
                <div class="clear"></div>
                <div class="textbox">
                   @Html.TextBoxFor(m => m.Name, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="blockInfo requiredField" id="blockPasswordRetype">
                <label>@Html.LabelFor(m => m.PhoneNumber)</label>
                <div class="clear"></div>
                <div class="textbox">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "tbxRegister" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber)
                </div>
            </div>
            <div class="clear"></div>
            <div class="blockInfo leftBlock requiredField" lastBlock" id ="tbxCapcha">
                <div class="textbox">   
                    @Html.Raw(Html.GenerateCaptcha("captcha", "clean"))
                    @Html.ValidationMessage("captcha")
                </div>
            </div>
            <div class="blockInfo lastBlock requiredField" id="blockBtnRegis" style="width: 200px">
                <div style="margin-top: 16px;">
                    @Html.CheckBoxFor(model => model.IsTermsAccepted, new { @id = "rAccept" })
                    @*<div>Tôi đồng ý với <a id ="showDK"  href="javascript:show();">khoản sử dụng</a> .
                    </div>*@
                    <label>Tôi đồng ý với <a id ="showDK" href="" >điều khoản sử dụng</a></label>
                    @Html.ValidationMessageFor(model => model.IsTermsAccepted)
                </div>
                <div id="element_to_pop_up" class="login-regis" style=" display:none; margin: 0 auto; width: 120px; height: 50px;">
                    <a class="b-close">x</a>
                    <div class="tittle">
                    <h1>Điều khoản sử dụng</h1>
                    <P>1.</P>
                    <P>2.</p>
                    <p>3.</p>
                    <p>4.</p>
                    </div>  
                </div>                
                <div class="clear"></div>                
                <input type="submit" id="btnRegis" value="" style="float:right; margin-top: 28px;"/>
            </div>
        </div>
    
}
</div>