//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RentalHouseFinding", "ProvincesDistricts", "Provinces", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Provinces), "Districts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Districts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "DistrictsPosts", "Districts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Districts), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Posts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "CategoriesPosts", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Categories), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Posts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsPostImages", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "PostImages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.PostImages), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "UsersFavorites", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Users), "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Favorites), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsFavorites", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Favorites), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsReportedPosts", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "ReportedPosts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.ReportedPosts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "UsersReportedPosts", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Users), "ReportedPosts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.ReportedPosts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "RolesUsers", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Roles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Users), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsFacilities", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "Facilities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Facilities), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsContacts", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Contacts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsPostVideos", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "PostVideos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.PostVideos), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostStatusesPosts", "PostStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.PostStatuses), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Posts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "UsersPosts", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RentalHouseFinding.Models.Users), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Posts), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsMessegesReceiver", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "Messeges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Questions), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "PostsMessegesSender", "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Posts), "Messeges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Questions), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "QuestionsAnswers", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.Questions), "Answers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Answers), true)]
[assembly: EdmRelationshipAttribute("RentalHouseFinding", "FacilityTemplatesFacilities", "FacilityTemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentalHouseFinding.Models.FacilityTemplates), "Facilities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentalHouseFinding.Models.Facilities), true)]

#endregion

namespace RentalHouseFinding.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RentalHouseFindingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RentalHouseFindingEntities object using the connection string found in the 'RentalHouseFindingEntities' section of the application configuration file.
        /// </summary>
        public RentalHouseFindingEntities() : base("name=RentalHouseFindingEntities", "RentalHouseFindingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RentalHouseFindingEntities object.
        /// </summary>
        public RentalHouseFindingEntities(string connectionString) : base(connectionString, "RentalHouseFindingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RentalHouseFindingEntities object.
        /// </summary>
        public RentalHouseFindingEntities(EntityConnection connection) : base(connection, "RentalHouseFindingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Provinces> Provinces
        {
            get
            {
                if ((_Provinces == null))
                {
                    _Provinces = base.CreateObjectSet<Provinces>("Provinces");
                }
                return _Provinces;
            }
        }
        private ObjectSet<Provinces> _Provinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Districts> Districts
        {
            get
            {
                if ((_Districts == null))
                {
                    _Districts = base.CreateObjectSet<Districts>("Districts");
                }
                return _Districts;
            }
        }
        private ObjectSet<Districts> _Districts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Posts> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Posts>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Posts> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostImages> PostImages
        {
            get
            {
                if ((_PostImages == null))
                {
                    _PostImages = base.CreateObjectSet<PostImages>("PostImages");
                }
                return _PostImages;
            }
        }
        private ObjectSet<PostImages> _PostImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostStatuses> PostStatuses
        {
            get
            {
                if ((_PostStatuses == null))
                {
                    _PostStatuses = base.CreateObjectSet<PostStatuses>("PostStatuses");
                }
                return _PostStatuses;
            }
        }
        private ObjectSet<PostStatuses> _PostStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Favorites> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorites>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorites> _Favorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportedPosts> ReportedPosts
        {
            get
            {
                if ((_ReportedPosts == null))
                {
                    _ReportedPosts = base.CreateObjectSet<ReportedPosts>("ReportedPosts");
                }
                return _ReportedPosts;
            }
        }
        private ObjectSet<ReportedPosts> _ReportedPosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BadWords> BadWords
        {
            get
            {
                if ((_BadWords == null))
                {
                    _BadWords = base.CreateObjectSet<BadWords>("BadWords");
                }
                return _BadWords;
            }
        }
        private ObjectSet<BadWords> _BadWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facilities> Facilities
        {
            get
            {
                if ((_Facilities == null))
                {
                    _Facilities = base.CreateObjectSet<Facilities>("Facilities");
                }
                return _Facilities;
            }
        }
        private ObjectSet<Facilities> _Facilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contacts> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contacts>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contacts> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostVideos> PostVideos
        {
            get
            {
                if ((_PostVideos == null))
                {
                    _PostVideos = base.CreateObjectSet<PostVideos>("PostVideos");
                }
                return _PostVideos;
            }
        }
        private ObjectSet<PostVideos> _PostVideos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigurationRHF> ConfigurationRHFs
        {
            get
            {
                if ((_ConfigurationRHFs == null))
                {
                    _ConfigurationRHFs = base.CreateObjectSet<ConfigurationRHF>("ConfigurationRHFs");
                }
                return _ConfigurationRHFs;
            }
        }
        private ObjectSet<ConfigurationRHF> _ConfigurationRHFs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Questions> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Questions>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Questions> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answers> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answers>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answers> _Answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvanceSearchScore> AdvanceSearchScores
        {
            get
            {
                if ((_AdvanceSearchScores == null))
                {
                    _AdvanceSearchScores = base.CreateObjectSet<AdvanceSearchScore>("AdvanceSearchScores");
                }
                return _AdvanceSearchScores;
            }
        }
        private ObjectSet<AdvanceSearchScore> _AdvanceSearchScores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FacilityTemplates> FacilityTemplates
        {
            get
            {
                if ((_FacilityTemplates == null))
                {
                    _FacilityTemplates = base.CreateObjectSet<FacilityTemplates>("FacilityTemplates");
                }
                return _FacilityTemplates;
            }
        }
        private ObjectSet<FacilityTemplates> _FacilityTemplates;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Provinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinces(Provinces provinces)
        {
            base.AddObject("Provinces", provinces);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Districts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistricts(Districts districts)
        {
            base.AddObject("Districts", districts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Posts posts)
        {
            base.AddObject("Posts", posts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostImages(PostImages postImages)
        {
            base.AddObject("PostImages", postImages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostStatuses(PostStatuses postStatuses)
        {
            base.AddObject("PostStatuses", postStatuses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Favorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFavorites(Favorites favorites)
        {
            base.AddObject("Favorites", favorites);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportedPosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportedPosts(ReportedPosts reportedPosts)
        {
            base.AddObject("ReportedPosts", reportedPosts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BadWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBadWords(BadWords badWords)
        {
            base.AddObject("BadWords", badWords);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilities(Facilities facilities)
        {
            base.AddObject("Facilities", facilities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contacts contacts)
        {
            base.AddObject("Contacts", contacts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostVideos(PostVideos postVideos)
        {
            base.AddObject("PostVideos", postVideos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigurationRHFs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurationRHFs(ConfigurationRHF configurationRHF)
        {
            base.AddObject("ConfigurationRHFs", configurationRHF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Questions questions)
        {
            base.AddObject("Questions", questions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswers(Answers answers)
        {
            base.AddObject("Answers", answers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvanceSearchScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvanceSearchScores(AdvanceSearchScore advanceSearchScore)
        {
            base.AddObject("AdvanceSearchScores", advanceSearchScore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FacilityTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilityTemplates(FacilityTemplates facilityTemplates)
        {
            base.AddObject("FacilityTemplates", facilityTemplates);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="categoryIdPass">No Metadata Documentation available.</param>
        /// <param name="provinceIdPass">No Metadata Documentation available.</param>
        /// <param name="districtIdPass">No Metadata Documentation available.</param>
        /// <param name="keyword">No Metadata Documentation available.</param>
        public ObjectResult<FullTextSearchPost_ResultSuggestion> FullTextSearchPost(Nullable<global::System.Int32> categoryIdPass, Nullable<global::System.Int32> provinceIdPass, Nullable<global::System.Int32> districtIdPass, global::System.String keyword)
        {
            ObjectParameter categoryIdPassParameter;
            if (categoryIdPass.HasValue)
            {
                categoryIdPassParameter = new ObjectParameter("CategoryIdPass", categoryIdPass);
            }
            else
            {
                categoryIdPassParameter = new ObjectParameter("CategoryIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter provinceIdPassParameter;
            if (provinceIdPass.HasValue)
            {
                provinceIdPassParameter = new ObjectParameter("ProvinceIdPass", provinceIdPass);
            }
            else
            {
                provinceIdPassParameter = new ObjectParameter("ProvinceIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter districtIdPassParameter;
            if (districtIdPass.HasValue)
            {
                districtIdPassParameter = new ObjectParameter("DistrictIdPass", districtIdPass);
            }
            else
            {
                districtIdPassParameter = new ObjectParameter("DistrictIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter keywordParameter;
            if (keyword != null)
            {
                keywordParameter = new ObjectParameter("Keyword", keyword);
            }
            else
            {
                keywordParameter = new ObjectParameter("Keyword", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FullTextSearchPost_ResultSuggestion>("FullTextSearchPost", categoryIdPassParameter, provinceIdPassParameter, districtIdPassParameter, keywordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="categoryIdPass">No Metadata Documentation available.</param>
        /// <param name="provinceIdPass">No Metadata Documentation available.</param>
        /// <param name="districtIdPass">No Metadata Documentation available.</param>
        /// <param name="areaMax">No Metadata Documentation available.</param>
        /// <param name="areaMin">No Metadata Documentation available.</param>
        /// <param name="priceMax">No Metadata Documentation available.</param>
        /// <param name="priceMin">No Metadata Documentation available.</param>
        /// <param name="hasAirConditionerScore">No Metadata Documentation available.</param>
        /// <param name="hasBedScore">No Metadata Documentation available.</param>
        /// <param name="hasGarageScore">No Metadata Documentation available.</param>
        /// <param name="hasInternetScore">No Metadata Documentation available.</param>
        /// <param name="hasMotorParkingLotScore">No Metadata Documentation available.</param>
        /// <param name="hasSecurityScore">No Metadata Documentation available.</param>
        /// <param name="hasToilet">No Metadata Documentation available.</param>
        /// <param name="hasTVCableScore">No Metadata Documentation available.</param>
        /// <param name="hasWaterHeaterScore">No Metadata Documentation available.</param>
        /// <param name="isAllowCookingScore">No Metadata Documentation available.</param>
        /// <param name="isStayWithOwnerScore">No Metadata Documentation available.</param>
        public ObjectResult<AdvancedSearchFacility_Result> AdvancedSearchFacilities(Nullable<global::System.Int32> categoryIdPass, Nullable<global::System.Int32> provinceIdPass, Nullable<global::System.Int32> districtIdPass, Nullable<global::System.Double> areaMax, Nullable<global::System.Double> areaMin, Nullable<global::System.Double> priceMax, Nullable<global::System.Double> priceMin, Nullable<global::System.Int32> hasAirConditionerScore, Nullable<global::System.Int32> hasBedScore, Nullable<global::System.Int32> hasGarageScore, Nullable<global::System.Int32> hasInternetScore, Nullable<global::System.Int32> hasMotorParkingLotScore, Nullable<global::System.Int32> hasSecurityScore, Nullable<global::System.Int32> hasToilet, Nullable<global::System.Int32> hasTVCableScore, Nullable<global::System.Int32> hasWaterHeaterScore, Nullable<global::System.Int32> isAllowCookingScore, Nullable<global::System.Int32> isStayWithOwnerScore)
        {
            ObjectParameter categoryIdPassParameter;
            if (categoryIdPass.HasValue)
            {
                categoryIdPassParameter = new ObjectParameter("CategoryIdPass", categoryIdPass);
            }
            else
            {
                categoryIdPassParameter = new ObjectParameter("CategoryIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter provinceIdPassParameter;
            if (provinceIdPass.HasValue)
            {
                provinceIdPassParameter = new ObjectParameter("ProvinceIdPass", provinceIdPass);
            }
            else
            {
                provinceIdPassParameter = new ObjectParameter("ProvinceIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter districtIdPassParameter;
            if (districtIdPass.HasValue)
            {
                districtIdPassParameter = new ObjectParameter("DistrictIdPass", districtIdPass);
            }
            else
            {
                districtIdPassParameter = new ObjectParameter("DistrictIdPass", typeof(global::System.Int32));
            }
    
            ObjectParameter areaMaxParameter;
            if (areaMax.HasValue)
            {
                areaMaxParameter = new ObjectParameter("AreaMax", areaMax);
            }
            else
            {
                areaMaxParameter = new ObjectParameter("AreaMax", typeof(global::System.Double));
            }
    
            ObjectParameter areaMinParameter;
            if (areaMin.HasValue)
            {
                areaMinParameter = new ObjectParameter("AreaMin", areaMin);
            }
            else
            {
                areaMinParameter = new ObjectParameter("AreaMin", typeof(global::System.Double));
            }
    
            ObjectParameter priceMaxParameter;
            if (priceMax.HasValue)
            {
                priceMaxParameter = new ObjectParameter("PriceMax", priceMax);
            }
            else
            {
                priceMaxParameter = new ObjectParameter("PriceMax", typeof(global::System.Double));
            }
    
            ObjectParameter priceMinParameter;
            if (priceMin.HasValue)
            {
                priceMinParameter = new ObjectParameter("PriceMin", priceMin);
            }
            else
            {
                priceMinParameter = new ObjectParameter("PriceMin", typeof(global::System.Double));
            }
    
            ObjectParameter hasAirConditionerScoreParameter;
            if (hasAirConditionerScore.HasValue)
            {
                hasAirConditionerScoreParameter = new ObjectParameter("HasAirConditionerScore", hasAirConditionerScore);
            }
            else
            {
                hasAirConditionerScoreParameter = new ObjectParameter("HasAirConditionerScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasBedScoreParameter;
            if (hasBedScore.HasValue)
            {
                hasBedScoreParameter = new ObjectParameter("HasBedScore", hasBedScore);
            }
            else
            {
                hasBedScoreParameter = new ObjectParameter("HasBedScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasGarageScoreParameter;
            if (hasGarageScore.HasValue)
            {
                hasGarageScoreParameter = new ObjectParameter("HasGarageScore", hasGarageScore);
            }
            else
            {
                hasGarageScoreParameter = new ObjectParameter("HasGarageScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasInternetScoreParameter;
            if (hasInternetScore.HasValue)
            {
                hasInternetScoreParameter = new ObjectParameter("HasInternetScore", hasInternetScore);
            }
            else
            {
                hasInternetScoreParameter = new ObjectParameter("HasInternetScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasMotorParkingLotScoreParameter;
            if (hasMotorParkingLotScore.HasValue)
            {
                hasMotorParkingLotScoreParameter = new ObjectParameter("HasMotorParkingLotScore", hasMotorParkingLotScore);
            }
            else
            {
                hasMotorParkingLotScoreParameter = new ObjectParameter("HasMotorParkingLotScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasSecurityScoreParameter;
            if (hasSecurityScore.HasValue)
            {
                hasSecurityScoreParameter = new ObjectParameter("HasSecurityScore", hasSecurityScore);
            }
            else
            {
                hasSecurityScoreParameter = new ObjectParameter("HasSecurityScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasToiletParameter;
            if (hasToilet.HasValue)
            {
                hasToiletParameter = new ObjectParameter("HasToilet", hasToilet);
            }
            else
            {
                hasToiletParameter = new ObjectParameter("HasToilet", typeof(global::System.Int32));
            }
    
            ObjectParameter hasTVCableScoreParameter;
            if (hasTVCableScore.HasValue)
            {
                hasTVCableScoreParameter = new ObjectParameter("HasTVCableScore", hasTVCableScore);
            }
            else
            {
                hasTVCableScoreParameter = new ObjectParameter("HasTVCableScore", typeof(global::System.Int32));
            }
    
            ObjectParameter hasWaterHeaterScoreParameter;
            if (hasWaterHeaterScore.HasValue)
            {
                hasWaterHeaterScoreParameter = new ObjectParameter("HasWaterHeaterScore", hasWaterHeaterScore);
            }
            else
            {
                hasWaterHeaterScoreParameter = new ObjectParameter("HasWaterHeaterScore", typeof(global::System.Int32));
            }
    
            ObjectParameter isAllowCookingScoreParameter;
            if (isAllowCookingScore.HasValue)
            {
                isAllowCookingScoreParameter = new ObjectParameter("IsAllowCookingScore", isAllowCookingScore);
            }
            else
            {
                isAllowCookingScoreParameter = new ObjectParameter("IsAllowCookingScore", typeof(global::System.Int32));
            }
    
            ObjectParameter isStayWithOwnerScoreParameter;
            if (isStayWithOwnerScore.HasValue)
            {
                isStayWithOwnerScoreParameter = new ObjectParameter("IsStayWithOwnerScore", isStayWithOwnerScore);
            }
            else
            {
                isStayWithOwnerScoreParameter = new ObjectParameter("IsStayWithOwnerScore", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<AdvancedSearchFacility_Result>("AdvancedSearchFacilities", categoryIdPassParameter, provinceIdPassParameter, districtIdPassParameter, areaMaxParameter, areaMinParameter, priceMaxParameter, priceMinParameter, hasAirConditionerScoreParameter, hasBedScoreParameter, hasGarageScoreParameter, hasInternetScoreParameter, hasMotorParkingLotScoreParameter, hasSecurityScoreParameter, hasToiletParameter, hasTVCableScoreParameter, hasWaterHeaterScoreParameter, isAllowCookingScoreParameter, isStayWithOwnerScoreParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="AdvanceSearchScore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvanceSearchScore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvanceSearchScore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static AdvanceSearchScore CreateAdvanceSearchScore(global::System.Int32 id, global::System.String name, global::System.Int32 score)
        {
            AdvanceSearchScore advanceSearchScore = new AdvanceSearchScore();
            advanceSearchScore.Id = id;
            advanceSearchScore.Name = name;
            advanceSearchScore.Score = score;
            return advanceSearchScore;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Answers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        public static Answers CreateAnswers(global::System.Int32 id, global::System.String content, global::System.DateTime createdDate, global::System.Boolean isDeleted, global::System.Int32 questionId)
        {
            Answers answers = new Answers();
            answers.Id = id;
            answers.Content = content;
            answers.CreatedDate = createdDate;
            answers.IsDeleted = isDeleted;
            answers.QuestionId = questionId;
            return answers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "QuestionsAnswers", "Questions")]
        public Questions Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questions>("RentalHouseFinding.QuestionsAnswers", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questions>("RentalHouseFinding.QuestionsAnswers", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Questions> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questions>("RentalHouseFinding.QuestionsAnswers", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Questions>("RentalHouseFinding.QuestionsAnswers", "Questions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="BadWords")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BadWords : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BadWords object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        public static BadWords CreateBadWords(global::System.Int32 id, global::System.String word)
        {
            BadWords badWords = new BadWords();
            badWords.Id = id;
            badWords.Word = word;
            return badWords;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Categories object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Categories CreateCategories(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted)
        {
            Categories categories = new Categories();
            categories.Id = id;
            categories.Name = name;
            categories.IsDeleted = isDeleted;
            return categories;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "CategoriesPosts", "Posts")]
        public EntityCollection<Posts> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Posts>("RentalHouseFinding.CategoriesPosts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Posts>("RentalHouseFinding.CategoriesPosts", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="ConfigurationRHF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigurationRHF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigurationRHF object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ConfigurationRHF CreateConfigurationRHF(global::System.Int32 id)
        {
            ConfigurationRHF configurationRHF = new ConfigurationRHF();
            configurationRHF.Id = id;
            return configurationRHF;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Contacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contacts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contacts object.
        /// </summary>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="postIdContacts">Initial value of the PostIdContacts property.</param>
        public static Contacts CreateContacts(global::System.String phone, global::System.Int32 postIdContacts)
        {
            Contacts contacts = new Contacts();
            contacts.Phone = phone;
            contacts.PostIdContacts = postIdContacts;
            return contacts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Yahoo
        {
            get
            {
                return _Yahoo;
            }
            set
            {
                OnYahooChanging(value);
                ReportPropertyChanging("Yahoo");
                _Yahoo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Yahoo");
                OnYahooChanged();
            }
        }
        private global::System.String _Yahoo;
        partial void OnYahooChanging(global::System.String value);
        partial void OnYahooChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Skype
        {
            get
            {
                return _Skype;
            }
            set
            {
                OnSkypeChanging(value);
                ReportPropertyChanging("Skype");
                _Skype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Skype");
                OnSkypeChanged();
            }
        }
        private global::System.String _Skype;
        partial void OnSkypeChanging(global::System.String value);
        partial void OnSkypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostIdContacts
        {
            get
            {
                return _PostIdContacts;
            }
            set
            {
                if (_PostIdContacts != value)
                {
                    OnPostIdContactsChanging(value);
                    ReportPropertyChanging("PostIdContacts");
                    _PostIdContacts = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostIdContacts");
                    OnPostIdContactsChanged();
                }
            }
        }
        private global::System.Int32 _PostIdContacts;
        partial void OnPostIdContactsChanging(global::System.Int32 value);
        partial void OnPostIdContactsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsContacts", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsContacts", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsContacts", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsContacts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsContacts", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Districts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Districts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Districts object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="lon">Initial value of the Lon property.</param>
        /// <param name="provinceId">Initial value of the ProvinceId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Districts CreateDistricts(global::System.Int32 id, global::System.String name, global::System.Double lat, global::System.Double lon, global::System.Int32 provinceId, global::System.Boolean isDeleted)
        {
            Districts districts = new Districts();
            districts.Id = id;
            districts.Name = name;
            districts.Lat = lat;
            districts.Lon = lon;
            districts.ProvinceId = provinceId;
            districts.IsDeleted = isDeleted;
            return districts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private global::System.Double _Lon;
        partial void OnLonChanging(global::System.Double value);
        partial void OnLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProvinceId
        {
            get
            {
                return _ProvinceId;
            }
            set
            {
                OnProvinceIdChanging(value);
                ReportPropertyChanging("ProvinceId");
                _ProvinceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceId");
                OnProvinceIdChanged();
            }
        }
        private global::System.Int32 _ProvinceId;
        partial void OnProvinceIdChanging(global::System.Int32 value);
        partial void OnProvinceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "ProvincesDistricts", "Provinces")]
        public Provinces Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provinces>("RentalHouseFinding.ProvincesDistricts", "Provinces").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provinces>("RentalHouseFinding.ProvincesDistricts", "Provinces").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provinces> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provinces>("RentalHouseFinding.ProvincesDistricts", "Provinces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provinces>("RentalHouseFinding.ProvincesDistricts", "Provinces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "DistrictsPosts", "Posts")]
        public EntityCollection<Posts> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Posts>("RentalHouseFinding.DistrictsPosts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Posts>("RentalHouseFinding.DistrictsPosts", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Facilities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Facilities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Facilities object.
        /// </summary>
        /// <param name="hasInternet">Initial value of the HasInternet property.</param>
        /// <param name="electricityFee">Initial value of the ElectricityFee property.</param>
        /// <param name="waterFee">Initial value of the WaterFee property.</param>
        /// <param name="hasTVCable">Initial value of the HasTVCable property.</param>
        /// <param name="hasBed">Initial value of the HasBed property.</param>
        /// <param name="hasWaterHeater">Initial value of the HasWaterHeater property.</param>
        /// <param name="isAllowCooking">Initial value of the IsAllowCooking property.</param>
        /// <param name="hasMotorParkingLot">Initial value of the HasMotorParkingLot property.</param>
        /// <param name="hasToilet">Initial value of the HasToilet property.</param>
        /// <param name="hasAirConditioner">Initial value of the HasAirConditioner property.</param>
        /// <param name="hasGarage">Initial value of the HasGarage property.</param>
        /// <param name="isStayWithOwner">Initial value of the IsStayWithOwner property.</param>
        /// <param name="restrictHours">Initial value of the RestrictHours property.</param>
        /// <param name="hasSecurity">Initial value of the HasSecurity property.</param>
        /// <param name="postIdFacilities">Initial value of the PostIdFacilities property.</param>
        /// <param name="facilityTemplateId">Initial value of the FacilityTemplateId property.</param>
        public static Facilities CreateFacilities(global::System.Boolean hasInternet, global::System.Double electricityFee, global::System.Double waterFee, global::System.Boolean hasTVCable, global::System.Boolean hasBed, global::System.Boolean hasWaterHeater, global::System.Boolean isAllowCooking, global::System.Boolean hasMotorParkingLot, global::System.Boolean hasToilet, global::System.Boolean hasAirConditioner, global::System.Boolean hasGarage, global::System.Boolean isStayWithOwner, global::System.Double restrictHours, global::System.Boolean hasSecurity, global::System.Int32 postIdFacilities, global::System.Int32 facilityTemplateId)
        {
            Facilities facilities = new Facilities();
            facilities.HasInternet = hasInternet;
            facilities.ElectricityFee = electricityFee;
            facilities.WaterFee = waterFee;
            facilities.HasTVCable = hasTVCable;
            facilities.HasBed = hasBed;
            facilities.HasWaterHeater = hasWaterHeater;
            facilities.IsAllowCooking = isAllowCooking;
            facilities.HasMotorParkingLot = hasMotorParkingLot;
            facilities.HasToilet = hasToilet;
            facilities.HasAirConditioner = hasAirConditioner;
            facilities.HasGarage = hasGarage;
            facilities.IsStayWithOwner = isStayWithOwner;
            facilities.RestrictHours = restrictHours;
            facilities.HasSecurity = hasSecurity;
            facilities.PostIdFacilities = postIdFacilities;
            facilities.FacilityTemplateId = facilityTemplateId;
            return facilities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasInternet
        {
            get
            {
                return _HasInternet;
            }
            set
            {
                OnHasInternetChanging(value);
                ReportPropertyChanging("HasInternet");
                _HasInternet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasInternet");
                OnHasInternetChanged();
            }
        }
        private global::System.Boolean _HasInternet;
        partial void OnHasInternetChanging(global::System.Boolean value);
        partial void OnHasInternetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ElectricityFee
        {
            get
            {
                return _ElectricityFee;
            }
            set
            {
                OnElectricityFeeChanging(value);
                ReportPropertyChanging("ElectricityFee");
                _ElectricityFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ElectricityFee");
                OnElectricityFeeChanged();
            }
        }
        private global::System.Double _ElectricityFee;
        partial void OnElectricityFeeChanging(global::System.Double value);
        partial void OnElectricityFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WaterFee
        {
            get
            {
                return _WaterFee;
            }
            set
            {
                OnWaterFeeChanging(value);
                ReportPropertyChanging("WaterFee");
                _WaterFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WaterFee");
                OnWaterFeeChanged();
            }
        }
        private global::System.Double _WaterFee;
        partial void OnWaterFeeChanging(global::System.Double value);
        partial void OnWaterFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasTVCable
        {
            get
            {
                return _HasTVCable;
            }
            set
            {
                OnHasTVCableChanging(value);
                ReportPropertyChanging("HasTVCable");
                _HasTVCable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasTVCable");
                OnHasTVCableChanged();
            }
        }
        private global::System.Boolean _HasTVCable;
        partial void OnHasTVCableChanging(global::System.Boolean value);
        partial void OnHasTVCableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasBed
        {
            get
            {
                return _HasBed;
            }
            set
            {
                OnHasBedChanging(value);
                ReportPropertyChanging("HasBed");
                _HasBed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasBed");
                OnHasBedChanged();
            }
        }
        private global::System.Boolean _HasBed;
        partial void OnHasBedChanging(global::System.Boolean value);
        partial void OnHasBedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasWaterHeater
        {
            get
            {
                return _HasWaterHeater;
            }
            set
            {
                OnHasWaterHeaterChanging(value);
                ReportPropertyChanging("HasWaterHeater");
                _HasWaterHeater = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasWaterHeater");
                OnHasWaterHeaterChanged();
            }
        }
        private global::System.Boolean _HasWaterHeater;
        partial void OnHasWaterHeaterChanging(global::System.Boolean value);
        partial void OnHasWaterHeaterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllowCooking
        {
            get
            {
                return _IsAllowCooking;
            }
            set
            {
                OnIsAllowCookingChanging(value);
                ReportPropertyChanging("IsAllowCooking");
                _IsAllowCooking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllowCooking");
                OnIsAllowCookingChanged();
            }
        }
        private global::System.Boolean _IsAllowCooking;
        partial void OnIsAllowCookingChanging(global::System.Boolean value);
        partial void OnIsAllowCookingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasMotorParkingLot
        {
            get
            {
                return _HasMotorParkingLot;
            }
            set
            {
                OnHasMotorParkingLotChanging(value);
                ReportPropertyChanging("HasMotorParkingLot");
                _HasMotorParkingLot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMotorParkingLot");
                OnHasMotorParkingLotChanged();
            }
        }
        private global::System.Boolean _HasMotorParkingLot;
        partial void OnHasMotorParkingLotChanging(global::System.Boolean value);
        partial void OnHasMotorParkingLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasToilet
        {
            get
            {
                return _HasToilet;
            }
            set
            {
                OnHasToiletChanging(value);
                ReportPropertyChanging("HasToilet");
                _HasToilet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasToilet");
                OnHasToiletChanged();
            }
        }
        private global::System.Boolean _HasToilet;
        partial void OnHasToiletChanging(global::System.Boolean value);
        partial void OnHasToiletChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasAirConditioner
        {
            get
            {
                return _HasAirConditioner;
            }
            set
            {
                OnHasAirConditionerChanging(value);
                ReportPropertyChanging("HasAirConditioner");
                _HasAirConditioner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAirConditioner");
                OnHasAirConditionerChanged();
            }
        }
        private global::System.Boolean _HasAirConditioner;
        partial void OnHasAirConditionerChanging(global::System.Boolean value);
        partial void OnHasAirConditionerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasGarage
        {
            get
            {
                return _HasGarage;
            }
            set
            {
                OnHasGarageChanging(value);
                ReportPropertyChanging("HasGarage");
                _HasGarage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasGarage");
                OnHasGarageChanged();
            }
        }
        private global::System.Boolean _HasGarage;
        partial void OnHasGarageChanging(global::System.Boolean value);
        partial void OnHasGarageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsStayWithOwner
        {
            get
            {
                return _IsStayWithOwner;
            }
            set
            {
                OnIsStayWithOwnerChanging(value);
                ReportPropertyChanging("IsStayWithOwner");
                _IsStayWithOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStayWithOwner");
                OnIsStayWithOwnerChanged();
            }
        }
        private global::System.Boolean _IsStayWithOwner;
        partial void OnIsStayWithOwnerChanging(global::System.Boolean value);
        partial void OnIsStayWithOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RestrictHours
        {
            get
            {
                return _RestrictHours;
            }
            set
            {
                OnRestrictHoursChanging(value);
                ReportPropertyChanging("RestrictHours");
                _RestrictHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestrictHours");
                OnRestrictHoursChanged();
            }
        }
        private global::System.Double _RestrictHours;
        partial void OnRestrictHoursChanging(global::System.Double value);
        partial void OnRestrictHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasSecurity
        {
            get
            {
                return _HasSecurity;
            }
            set
            {
                OnHasSecurityChanging(value);
                ReportPropertyChanging("HasSecurity");
                _HasSecurity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasSecurity");
                OnHasSecurityChanged();
            }
        }
        private global::System.Boolean _HasSecurity;
        partial void OnHasSecurityChanging(global::System.Boolean value);
        partial void OnHasSecurityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.String _Direction;
        partial void OnDirectionChanging(global::System.String value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostIdFacilities
        {
            get
            {
                return _PostIdFacilities;
            }
            set
            {
                if (_PostIdFacilities != value)
                {
                    OnPostIdFacilitiesChanging(value);
                    ReportPropertyChanging("PostIdFacilities");
                    _PostIdFacilities = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostIdFacilities");
                    OnPostIdFacilitiesChanged();
                }
            }
        }
        private global::System.Int32 _PostIdFacilities;
        partial void OnPostIdFacilitiesChanging(global::System.Int32 value);
        partial void OnPostIdFacilitiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityTemplateId
        {
            get
            {
                return _FacilityTemplateId;
            }
            set
            {
                OnFacilityTemplateIdChanging(value);
                ReportPropertyChanging("FacilityTemplateId");
                _FacilityTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacilityTemplateId");
                OnFacilityTemplateIdChanged();
            }
        }
        private global::System.Int32 _FacilityTemplateId;
        partial void OnFacilityTemplateIdChanging(global::System.Int32 value);
        partial void OnFacilityTemplateIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsFacilities", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFacilities", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFacilities", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFacilities", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsFacilities", "Posts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "FacilityTemplatesFacilities", "FacilityTemplates")]
        public FacilityTemplates FacilityTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FacilityTemplates>("RentalHouseFinding.FacilityTemplatesFacilities", "FacilityTemplates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FacilityTemplates>("RentalHouseFinding.FacilityTemplatesFacilities", "FacilityTemplates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FacilityTemplates> FacilityTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FacilityTemplates>("RentalHouseFinding.FacilityTemplatesFacilities", "FacilityTemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FacilityTemplates>("RentalHouseFinding.FacilityTemplatesFacilities", "FacilityTemplates", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="FacilityTemplates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FacilityTemplates : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FacilityTemplates object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FacilityTemplates CreateFacilityTemplates(global::System.Int32 id)
        {
            FacilityTemplates facilityTemplates = new FacilityTemplates();
            facilityTemplates.Id = id;
            return facilityTemplates;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.Boolean _Column1 = false;
        partial void OnColumn1Changing(global::System.Boolean value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column2
        {
            get
            {
                return _Column2;
            }
            set
            {
                OnColumn2Changing(value);
                ReportPropertyChanging("Column2");
                _Column2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column2");
                OnColumn2Changed();
            }
        }
        private global::System.Boolean _Column2 = false;
        partial void OnColumn2Changing(global::System.Boolean value);
        partial void OnColumn2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column3
        {
            get
            {
                return _Column3;
            }
            set
            {
                OnColumn3Changing(value);
                ReportPropertyChanging("Column3");
                _Column3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column3");
                OnColumn3Changed();
            }
        }
        private global::System.Boolean _Column3 = false;
        partial void OnColumn3Changing(global::System.Boolean value);
        partial void OnColumn3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column4
        {
            get
            {
                return _Column4;
            }
            set
            {
                OnColumn4Changing(value);
                ReportPropertyChanging("Column4");
                _Column4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column4");
                OnColumn4Changed();
            }
        }
        private global::System.Boolean _Column4 = false;
        partial void OnColumn4Changing(global::System.Boolean value);
        partial void OnColumn4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column5
        {
            get
            {
                return _Column5;
            }
            set
            {
                OnColumn5Changing(value);
                ReportPropertyChanging("Column5");
                _Column5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column5");
                OnColumn5Changed();
            }
        }
        private global::System.Boolean _Column5 = false;
        partial void OnColumn5Changing(global::System.Boolean value);
        partial void OnColumn5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column6
        {
            get
            {
                return _Column6;
            }
            set
            {
                OnColumn6Changing(value);
                ReportPropertyChanging("Column6");
                _Column6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column6");
                OnColumn6Changed();
            }
        }
        private global::System.Boolean _Column6 = false;
        partial void OnColumn6Changing(global::System.Boolean value);
        partial void OnColumn6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column7
        {
            get
            {
                return _Column7;
            }
            set
            {
                OnColumn7Changing(value);
                ReportPropertyChanging("Column7");
                _Column7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column7");
                OnColumn7Changed();
            }
        }
        private global::System.Boolean _Column7 = false;
        partial void OnColumn7Changing(global::System.Boolean value);
        partial void OnColumn7Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column8
        {
            get
            {
                return _Column8;
            }
            set
            {
                OnColumn8Changing(value);
                ReportPropertyChanging("Column8");
                _Column8 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column8");
                OnColumn8Changed();
            }
        }
        private global::System.Boolean _Column8 = false;
        partial void OnColumn8Changing(global::System.Boolean value);
        partial void OnColumn8Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column9
        {
            get
            {
                return _Column9;
            }
            set
            {
                OnColumn9Changing(value);
                ReportPropertyChanging("Column9");
                _Column9 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column9");
                OnColumn9Changed();
            }
        }
        private global::System.Boolean _Column9 = false;
        partial void OnColumn9Changing(global::System.Boolean value);
        partial void OnColumn9Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column10
        {
            get
            {
                return _Column10;
            }
            set
            {
                OnColumn10Changing(value);
                ReportPropertyChanging("Column10");
                _Column10 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column10");
                OnColumn10Changed();
            }
        }
        private global::System.Boolean _Column10 = false;
        partial void OnColumn10Changing(global::System.Boolean value);
        partial void OnColumn10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column11
        {
            get
            {
                return _Column11;
            }
            set
            {
                OnColumn11Changing(value);
                ReportPropertyChanging("Column11");
                _Column11 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column11");
                OnColumn11Changed();
            }
        }
        private global::System.Boolean _Column11 = false;
        partial void OnColumn11Changing(global::System.Boolean value);
        partial void OnColumn11Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "FacilityTemplatesFacilities", "Facilities")]
        public EntityCollection<Facilities> Facilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Facilities>("RentalHouseFinding.FacilityTemplatesFacilities", "Facilities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Facilities>("RentalHouseFinding.FacilityTemplatesFacilities", "Facilities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Favorites")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Favorites : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Favorites object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="addedDate">Initial value of the AddedDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Favorites CreateFavorites(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 postId, global::System.DateTime addedDate, global::System.Boolean isDeleted)
        {
            Favorites favorites = new Favorites();
            favorites.Id = id;
            favorites.UserId = userId;
            favorites.PostId = postId;
            favorites.AddedDate = addedDate;
            favorites.IsDeleted = isDeleted;
            return favorites;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private global::System.DateTime _AddedDate;
        partial void OnAddedDateChanging(global::System.DateTime value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersFavorites", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersFavorites", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersFavorites", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersFavorites", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("RentalHouseFinding.UsersFavorites", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsFavorites", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFavorites", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFavorites", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsFavorites", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsFavorites", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="PostImages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostImages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostImages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PostImages CreatePostImages(global::System.Int32 id, global::System.Int32 postId, global::System.String path, global::System.Boolean isDeleted)
        {
            PostImages postImages = new PostImages();
            postImages.Id = id;
            postImages.PostId = postId;
            postImages.Path = path;
            postImages.IsDeleted = isDeleted;
            return postImages;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsPostImages", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostImages", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostImages", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostImages", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsPostImages", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Posts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Posts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Posts object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="views">Initial value of the Views property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="editedDate">Initial value of the EditedDate property.</param>
        /// <param name="districtId">Initial value of the DistrictId property.</param>
        /// <param name="numberAddress">Initial value of the NumberAddress property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="area">Initial value of the Area property.</param>
        /// <param name="phoneActive">Initial value of the PhoneActive property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="lon">Initial value of the Lon property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        public static Posts CreatePosts(global::System.Int32 id, global::System.String title, global::System.Int32 categoryId, global::System.Int32 statusId, global::System.Boolean isDeleted, global::System.Int32 views, global::System.DateTime createdDate, global::System.DateTime editedDate, global::System.Int32 districtId, global::System.String numberAddress, global::System.Double price, global::System.Double area, global::System.String phoneActive, global::System.Double lat, global::System.Double lon, global::System.String street)
        {
            Posts posts = new Posts();
            posts.Id = id;
            posts.Title = title;
            posts.CategoryId = categoryId;
            posts.StatusId = statusId;
            posts.IsDeleted = isDeleted;
            posts.Views = views;
            posts.CreatedDate = createdDate;
            posts.EditedDate = editedDate;
            posts.DistrictId = districtId;
            posts.NumberAddress = numberAddress;
            posts.Price = price;
            posts.Area = area;
            posts.PhoneActive = phoneActive;
            posts.Lat = lat;
            posts.Lon = lon;
            posts.Street = street;
            return posts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Views
        {
            get
            {
                return _Views;
            }
            set
            {
                OnViewsChanging(value);
                ReportPropertyChanging("Views");
                _Views = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Views");
                OnViewsChanged();
            }
        }
        private global::System.Int32 _Views;
        partial void OnViewsChanging(global::System.Int32 value);
        partial void OnViewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EditedDate
        {
            get
            {
                return _EditedDate;
            }
            set
            {
                OnEditedDateChanging(value);
                ReportPropertyChanging("EditedDate");
                _EditedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedDate");
                OnEditedDateChanged();
            }
        }
        private global::System.DateTime _EditedDate;
        partial void OnEditedDateChanging(global::System.DateTime value);
        partial void OnEditedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RenewDate
        {
            get
            {
                return _RenewDate;
            }
            set
            {
                OnRenewDateChanging(value);
                ReportPropertyChanging("RenewDate");
                _RenewDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewDate");
                OnRenewDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RenewDate;
        partial void OnRenewDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRenewDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistrictId
        {
            get
            {
                return _DistrictId;
            }
            set
            {
                OnDistrictIdChanging(value);
                ReportPropertyChanging("DistrictId");
                _DistrictId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictId");
                OnDistrictIdChanged();
            }
        }
        private global::System.Int32 _DistrictId;
        partial void OnDistrictIdChanging(global::System.Int32 value);
        partial void OnDistrictIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NumberAddress
        {
            get
            {
                return _NumberAddress;
            }
            set
            {
                OnNumberAddressChanging(value);
                ReportPropertyChanging("NumberAddress");
                _NumberAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NumberAddress");
                OnNumberAddressChanged();
            }
        }
        private global::System.String _NumberAddress;
        partial void OnNumberAddressChanging(global::System.String value);
        partial void OnNumberAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.Double _Area;
        partial void OnAreaChanging(global::System.Double value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneActive
        {
            get
            {
                return _PhoneActive;
            }
            set
            {
                OnPhoneActiveChanging(value);
                ReportPropertyChanging("PhoneActive");
                _PhoneActive = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneActive");
                OnPhoneActiveChanged();
            }
        }
        private global::System.String _PhoneActive;
        partial void OnPhoneActiveChanging(global::System.String value);
        partial void OnPhoneActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private global::System.Double _Lon;
        partial void OnLonChanging(global::System.Double value);
        partial void OnLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "DistrictsPosts", "Districts")]
        public Districts District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Districts>("RentalHouseFinding.DistrictsPosts", "Districts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Districts>("RentalHouseFinding.DistrictsPosts", "Districts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Districts> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Districts>("RentalHouseFinding.DistrictsPosts", "Districts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Districts>("RentalHouseFinding.DistrictsPosts", "Districts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "CategoriesPosts", "Categories")]
        public Categories Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("RentalHouseFinding.CategoriesPosts", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("RentalHouseFinding.CategoriesPosts", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("RentalHouseFinding.CategoriesPosts", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("RentalHouseFinding.CategoriesPosts", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsPostImages", "PostImages")]
        public EntityCollection<PostImages> PostImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostImages>("RentalHouseFinding.PostsPostImages", "PostImages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostImages>("RentalHouseFinding.PostsPostImages", "PostImages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsFavorites", "Favorites")]
        public EntityCollection<Favorites> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorites>("RentalHouseFinding.PostsFavorites", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorites>("RentalHouseFinding.PostsFavorites", "Favorites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsReportedPosts", "ReportedPosts")]
        public EntityCollection<ReportedPosts> ReportedPosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportedPosts>("RentalHouseFinding.PostsReportedPosts", "ReportedPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportedPosts>("RentalHouseFinding.PostsReportedPosts", "ReportedPosts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsFacilities", "Facilities")]
        public Facilities Facilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facilities>("RentalHouseFinding.PostsFacilities", "Facilities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facilities>("RentalHouseFinding.PostsFacilities", "Facilities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facilities> FacilitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facilities>("RentalHouseFinding.PostsFacilities", "Facilities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facilities>("RentalHouseFinding.PostsFacilities", "Facilities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsContacts", "Contacts")]
        public Contacts Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("RentalHouseFinding.PostsContacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("RentalHouseFinding.PostsContacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contacts> ContactsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("RentalHouseFinding.PostsContacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contacts>("RentalHouseFinding.PostsContacts", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsPostVideos", "PostVideos")]
        public EntityCollection<PostVideos> PostVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostVideos>("RentalHouseFinding.PostsPostVideos", "PostVideos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostVideos>("RentalHouseFinding.PostsPostVideos", "PostVideos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostStatusesPosts", "PostStatuses")]
        public PostStatuses PostStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostStatuses>("RentalHouseFinding.PostStatusesPosts", "PostStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostStatuses>("RentalHouseFinding.PostStatusesPosts", "PostStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostStatuses> PostStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostStatuses>("RentalHouseFinding.PostStatusesPosts", "PostStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostStatuses>("RentalHouseFinding.PostStatusesPosts", "PostStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersPosts", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersPosts", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersPosts", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersPosts", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("RentalHouseFinding.UsersPosts", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsMessegesReceiver", "Messeges")]
        public EntityCollection<Questions> Messeges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("RentalHouseFinding.PostsMessegesReceiver", "Messeges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("RentalHouseFinding.PostsMessegesReceiver", "Messeges", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsMessegesSender", "Messeges")]
        public EntityCollection<Questions> Messeges_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("RentalHouseFinding.PostsMessegesSender", "Messeges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("RentalHouseFinding.PostsMessegesSender", "Messeges", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="PostStatuses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostStatuses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostStatuses object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PostStatuses CreatePostStatuses(global::System.Int32 id, global::System.Boolean isDeleted)
        {
            PostStatuses postStatuses = new PostStatuses();
            postStatuses.Id = id;
            postStatuses.IsDeleted = isDeleted;
            return postStatuses;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostStatusesPosts", "Posts")]
        public EntityCollection<Posts> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Posts>("RentalHouseFinding.PostStatusesPosts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Posts>("RentalHouseFinding.PostStatusesPosts", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="PostVideos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostVideos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostVideos object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PostVideos CreatePostVideos(global::System.Int32 id, global::System.Int32 postId, global::System.String path, global::System.Boolean isDeleted)
        {
            PostVideos postVideos = new PostVideos();
            postVideos.Id = id;
            postVideos.PostId = postId;
            postVideos.Path = path;
            postVideos.IsDeleted = isDeleted;
            return postVideos;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsPostVideos", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostVideos", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostVideos", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsPostVideos", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsPostVideos", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Provinces")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provinces : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Provinces object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="lon">Initial value of the Lon property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Provinces CreateProvinces(global::System.Int32 id, global::System.String name, global::System.Double lat, global::System.Double lon, global::System.Boolean isDeleted)
        {
            Provinces provinces = new Provinces();
            provinces.Id = id;
            provinces.Name = name;
            provinces.Lat = lat;
            provinces.Lon = lon;
            provinces.IsDeleted = isDeleted;
            return provinces;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private global::System.Double _Lon;
        partial void OnLonChanging(global::System.Double value);
        partial void OnLonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "ProvincesDistricts", "Districts")]
        public EntityCollection<Districts> Districts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Districts>("RentalHouseFinding.ProvincesDistricts", "Districts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Districts>("RentalHouseFinding.ProvincesDistricts", "Districts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Questions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Questions object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="senderId">Initial value of the SenderId property.</param>
        /// <param name="receiverId">Initial value of the ReceiverId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isReceiverRead">Initial value of the IsReceiverRead property.</param>
        /// <param name="property">Initial value of the Property property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Questions CreateQuestions(global::System.Int32 id, global::System.String content, global::System.Int32 senderId, global::System.Int32 receiverId, global::System.DateTime createdDate, global::System.Boolean isReceiverRead, global::System.String property, global::System.Boolean isDeleted)
        {
            Questions questions = new Questions();
            questions.Id = id;
            questions.Content = content;
            questions.SenderId = senderId;
            questions.ReceiverId = receiverId;
            questions.CreatedDate = createdDate;
            questions.IsReceiverRead = isReceiverRead;
            questions.Property = property;
            questions.IsDeleted = isDeleted;
            return questions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SenderId
        {
            get
            {
                return _SenderId;
            }
            set
            {
                OnSenderIdChanging(value);
                ReportPropertyChanging("SenderId");
                _SenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SenderId");
                OnSenderIdChanged();
            }
        }
        private global::System.Int32 _SenderId;
        partial void OnSenderIdChanging(global::System.Int32 value);
        partial void OnSenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceiverId
        {
            get
            {
                return _ReceiverId;
            }
            set
            {
                OnReceiverIdChanging(value);
                ReportPropertyChanging("ReceiverId");
                _ReceiverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiverId");
                OnReceiverIdChanged();
            }
        }
        private global::System.Int32 _ReceiverId;
        partial void OnReceiverIdChanging(global::System.Int32 value);
        partial void OnReceiverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReceiverRead
        {
            get
            {
                return _IsReceiverRead;
            }
            set
            {
                OnIsReceiverReadChanging(value);
                ReportPropertyChanging("IsReceiverRead");
                _IsReceiverRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReceiverRead");
                OnIsReceiverReadChanged();
            }
        }
        private global::System.Boolean _IsReceiverRead;
        partial void OnIsReceiverReadChanging(global::System.Boolean value);
        partial void OnIsReceiverReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Property
        {
            get
            {
                return _Property;
            }
            set
            {
                OnPropertyChanging(value);
                ReportPropertyChanging("Property");
                _Property = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Property");
                OnPropertyChanged();
            }
        }
        private global::System.String _Property;
        partial void OnPropertyChanging(global::System.String value);
        partial void OnPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsMessegesReceiver", "Posts")]
        public Posts PostMessReceiver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesReceiver", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesReceiver", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostMessReceiverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesReceiver", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsMessegesReceiver", "Posts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsMessegesSender", "Posts")]
        public Posts PostMessSender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesSender", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesSender", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostMessSenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsMessegesSender", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsMessegesSender", "Posts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "QuestionsAnswers", "Answers")]
        public EntityCollection<Answers> Answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Answers>("RentalHouseFinding.QuestionsAnswers", "Answers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Answers>("RentalHouseFinding.QuestionsAnswers", "Answers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="ReportedPosts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportedPosts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportedPosts object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="reportedBy">Initial value of the ReportedBy property.</param>
        /// <param name="reportedDate">Initial value of the ReportedDate property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="isIgnored">Initial value of the IsIgnored property.</param>
        public static ReportedPosts CreateReportedPosts(global::System.Int32 id, global::System.Int32 postId, global::System.Int32 reportedBy, global::System.DateTime reportedDate, global::System.String reason, global::System.Boolean isIgnored)
        {
            ReportedPosts reportedPosts = new ReportedPosts();
            reportedPosts.Id = id;
            reportedPosts.PostId = postId;
            reportedPosts.ReportedBy = reportedBy;
            reportedPosts.ReportedDate = reportedDate;
            reportedPosts.Reason = reason;
            reportedPosts.IsIgnored = isIgnored;
            return reportedPosts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportedBy
        {
            get
            {
                return _ReportedBy;
            }
            set
            {
                OnReportedByChanging(value);
                ReportPropertyChanging("ReportedBy");
                _ReportedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportedBy");
                OnReportedByChanged();
            }
        }
        private global::System.Int32 _ReportedBy;
        partial void OnReportedByChanging(global::System.Int32 value);
        partial void OnReportedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportedDate
        {
            get
            {
                return _ReportedDate;
            }
            set
            {
                OnReportedDateChanging(value);
                ReportPropertyChanging("ReportedDate");
                _ReportedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportedDate");
                OnReportedDateChanged();
            }
        }
        private global::System.DateTime _ReportedDate;
        partial void OnReportedDateChanging(global::System.DateTime value);
        partial void OnReportedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIgnored
        {
            get
            {
                return _IsIgnored;
            }
            set
            {
                OnIsIgnoredChanging(value);
                ReportPropertyChanging("IsIgnored");
                _IsIgnored = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIgnored");
                OnIsIgnoredChanged();
            }
        }
        private global::System.Boolean _IsIgnored;
        partial void OnIsIgnoredChanging(global::System.Boolean value);
        partial void OnIsIgnoredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "PostsReportedPosts", "Posts")]
        public Posts Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsReportedPosts", "Posts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsReportedPosts", "Posts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Posts> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Posts>("RentalHouseFinding.PostsReportedPosts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Posts>("RentalHouseFinding.PostsReportedPosts", "Posts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersReportedPosts", "Users")]
        public Users User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersReportedPosts", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersReportedPosts", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("RentalHouseFinding.UsersReportedPosts", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("RentalHouseFinding.UsersReportedPosts", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Roles CreateRoles(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted)
        {
            Roles roles = new Roles();
            roles.Id = id;
            roles.Name = name;
            roles.IsDeleted = isDeleted;
            return roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "RolesUsers", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("RentalHouseFinding.RolesUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("RentalHouseFinding.RolesUsers", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RentalHouseFinding", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String username, global::System.DateTime createdDate, global::System.DateTime lastUpdate, global::System.Boolean isDeleted, global::System.Int32 roleId)
        {
            Users users = new Users();
            users.Id = id;
            users.Username = username;
            users.CreatedDate = createdDate;
            users.LastUpdate = lastUpdate;
            users.IsDeleted = isDeleted;
            users.RoleId = roleId;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Avatar
        {
            get
            {
                return _Avatar;
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.String _Avatar;
        partial void OnAvatarChanging(global::System.String value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpenIdURL
        {
            get
            {
                return _OpenIdURL;
            }
            set
            {
                OnOpenIdURLChanging(value);
                ReportPropertyChanging("OpenIdURL");
                _OpenIdURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpenIdURL");
                OnOpenIdURLChanged();
            }
        }
        private global::System.String _OpenIdURL;
        partial void OnOpenIdURLChanging(global::System.String value);
        partial void OnOpenIdURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersFavorites", "Favorites")]
        public EntityCollection<Favorites> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorites>("RentalHouseFinding.UsersFavorites", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorites>("RentalHouseFinding.UsersFavorites", "Favorites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersReportedPosts", "ReportedPosts")]
        public EntityCollection<ReportedPosts> ReportedPosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportedPosts>("RentalHouseFinding.UsersReportedPosts", "ReportedPosts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportedPosts>("RentalHouseFinding.UsersReportedPosts", "ReportedPosts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "RolesUsers", "Roles")]
        public Roles Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("RentalHouseFinding.RolesUsers", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("RentalHouseFinding.RolesUsers", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("RentalHouseFinding.RolesUsers", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("RentalHouseFinding.RolesUsers", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RentalHouseFinding", "UsersPosts", "Posts")]
        public EntityCollection<Posts> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Posts>("RentalHouseFinding.UsersPosts", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Posts>("RentalHouseFinding.UsersPosts", "Posts", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="RentalHouseFinding", Name="AdvancedSearchFacility_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AdvancedSearchFacility_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvancedSearchFacility_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AdvancedSearchFacility_Result CreateAdvancedSearchFacility_Result(global::System.Int32 id)
        {
            AdvancedSearchFacility_Result advancedSearchFacility_Result = new AdvancedSearchFacility_Result();
            advancedSearchFacility_Result.Id = id;
            return advancedSearchFacility_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Score;
        partial void OnScoreChanging(Nullable<global::System.Int32> value);
        partial void OnScoreChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="RentalHouseFinding", Name="FullTextSearchPost_ResultSuggestion")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FullTextSearchPost_ResultSuggestion : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FullTextSearchPost_ResultSuggestion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static FullTextSearchPost_ResultSuggestion CreateFullTextSearchPost_ResultSuggestion(global::System.Int32 id, global::System.String title)
        {
            FullTextSearchPost_ResultSuggestion fullTextSearchPost_ResultSuggestion = new FullTextSearchPost_ResultSuggestion();
            fullTextSearchPost_ResultSuggestion.Id = id;
            fullTextSearchPost_ResultSuggestion.Title = title;
            return fullTextSearchPost_ResultSuggestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    }

    #endregion
    
}
